2020-04-13 11:28:29 -Starting BootdoApplication on PC201808081633 with PID 9328 (C:\MyWorks\IDEA2017WorkSpace01\bootdo\target\classes started by Administrator in C:\MyWorks\IDEA2017WorkSpace01\bootdo)
2020-04-13 11:28:29 -Running with Spring Boot v2.0.5.RELEASE, Spring v5.0.9.RELEASE
2020-04-13 11:28:29 -The following profiles are active: dev
2020-04-13 11:28:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b03b9fe: startup date [Mon Apr 13 11:28:29 CST 2020]; root of context hierarchy
2020-04-13 11:28:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-13 11:28:31 -Overriding bean definition for bean 'goodsRepository' with a different definition: replacing [Generic bean: class [org.mybatis.spring.mapper.MapperFactoryBean]; scope=singleton; abstract=false; lazyInit=false; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\MyWorks\IDEA2017WorkSpace01\bootdo\target\classes\com\bootdo\brave\dao\GoodsRepository.class]] with [Root bean: class [org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-13 11:28:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-13 11:28:31 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo.brave.dao.GoodsRepository.
2020-04-13 11:28:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2ea58efa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$20febda1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:32 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/Administrator/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2020-04-13 11:28:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2020-04-13 11:28:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2020-04-13 11:28:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 11:28:33 -Tomcat initialized with port(s): 8888 (http)
2020-04-13 11:28:33 -Initializing ProtocolHandler ["http-nio-8888"]
2020-04-13 11:28:33 -Starting service [Tomcat]
2020-04-13 11:28:33 -Starting Servlet Engine: Apache Tomcat/8.5.34
2020-04-13 11:28:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Java\jdk1.8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Java\jdk1.8\bin;C:\Java\jdk1.8\jre\bin;C:\MyWorks\Maven\apache-maven-3.5.4\bin;C:\MyWorks\nodejs\;C:\MyWorks\TortoiseSVN\bin;C:\Windows/system32;C:\Windows;C:\MyWorks\Git\Git\cmd;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\BypassRuntm;.]
2020-04-13 11:28:33 -Initializing Spring embedded WebApplicationContext
2020-04-13 11:28:33 -Root WebApplicationContext: initialization completed in 3532 ms
2020-04-13 11:28:34 -{dataSource-1} inited
2020-04-13 11:28:34 -no modules loaded
2020-04-13 11:28:34 -loaded plugin [org.elasticsearch.index.reindex.ReindexPlugin]
2020-04-13 11:28:34 -loaded plugin [org.elasticsearch.join.ParentJoinPlugin]
2020-04-13 11:28:34 -loaded plugin [org.elasticsearch.percolator.PercolatorPlugin]
2020-04-13 11:28:34 -loaded plugin [org.elasticsearch.script.mustache.MustachePlugin]
2020-04-13 11:28:34 -loaded plugin [org.elasticsearch.transport.Netty4Plugin]
2020-04-13 11:28:35 -Adding transport node : 192.168.8.54:9300
2020-04-13 11:28:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-04-13 11:28:57 -Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-04-13 11:28:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-04-13 11:28:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-04-13 11:28:57 -Mapping filter: 'requestContextFilter' to: [/*]
2020-04-13 11:28:57 -Filter xssFilter was not registered (disabled)
2020-04-13 11:28:57 -Mapping filter: 'httpTraceFilter' to: [/*]
2020-04-13 11:28:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2020-04-13 11:28:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2020-04-13 11:28:57 -Servlet statViewServlet mapped to [/druid/*]
2020-04-13 11:28:57 -Servlet dispatcherServlet mapped to [/]
2020-04-13 11:28:58 -ProcessEngine default created
2020-04-13 11:28:59 -failed to load elasticsearch nodes : org.elasticsearch.client.transport.NoNodeAvailableException: None of the configured nodes are available: [{#transport#-1}{bGcC1tmzR2We_BbuEoXvvg}{192.168.8.54}{192.168.8.54:9300}]
2020-04-13 11:28:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b03b9fe: startup date [Mon Apr 13 11:28:29 CST 2020]; root of context hierarchy
2020-04-13 11:28:59 -Using default implementation for ThreadExecutor
2020-04-13 11:28:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-13 11:28:59 -Quartz Scheduler v.2.2.1 created.
2020-04-13 11:28:59 -RAMJobStore initialized.
2020-04-13 11:28:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-13 11:28:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-13 11:28:59 -Quartz scheduler version: 2.2.1
2020-04-13 11:28:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5b3755f4
2020-04-13 11:29:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2020-04-13 11:29:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2020-04-13 11:29:00 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2020-04-13 11:29:00 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2020-04-13 11:29:00 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2020-04-13 11:29:00 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-04-13 11:29:00 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2020-04-13 11:29:00 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2020-04-13 11:29:00 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2020-04-13 11:29:00 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2020-04-13 11:29:00 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2020-04-13 11:29:00 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2020-04-13 11:29:00 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2020-04-13 11:29:00 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2020-04-13 11:29:00 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2020-04-13 11:29:00 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-04-13 11:29:00 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2020-04-13 11:29:00 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2020-04-13 11:29:00 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2020-04-13 11:29:00 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2020-04-13 11:29:00 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2020-04-13 11:29:00 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-04-13 11:29:00 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2020-04-13 11:29:00 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2020-04-13 11:29:00 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-04-13 11:29:00 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2020-04-13 11:29:00 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2020-04-13 11:29:00 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-04-13 11:29:00 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2020-04-13 11:29:00 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2020-04-13 11:29:00 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2020-04-13 11:29:00 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2020-04-13 11:29:00 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2020-04-13 11:29:00 -Mapped "{[/save],methods=[GET]}" onto public java.lang.String com.bootdo.brave.controller.GoodsController.save()
2020-04-13 11:29:00 -Mapped "{[/hello]}" onto public java.lang.String com.bootdo.brave.controller.HelloController.index()
2020-04-13 11:29:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2020-04-13 11:29:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2020-04-13 11:29:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2020-04-13 11:29:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2020-04-13 11:29:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2020-04-13 11:29:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-04-13 11:29:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2020-04-13 11:29:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-04-13 11:29:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2020-04-13 11:29:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-04-13 11:29:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2020-04-13 11:29:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2020-04-13 11:29:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2020-04-13 11:29:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2020-04-13 11:29:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2020-04-13 11:29:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 11:29:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 11:29:00 -Mapped "{[/frequent/list],methods=[GET]}" onto public java.lang.String com.bootdo.frequent.controller.FrequentContactController.list()
2020-04-13 11:29:00 -Mapped "{[/frequent/query],methods=[GET]}" onto public com.bootdo.frequent.domain.FrequentContact com.bootdo.frequent.controller.FrequentContactController.selectById()
2020-04-13 11:29:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2020-04-13 11:29:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2020-04-13 11:29:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2020-04-13 11:29:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2020-04-13 11:29:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2020-04-13 11:29:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2020-04-13 11:29:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2020-04-13 11:29:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2020-04-13 11:29:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2020-04-13 11:29:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2020-04-13 11:29:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2020-04-13 11:29:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2020-04-13 11:29:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2020-04-13 11:29:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2020-04-13 11:29:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2020-04-13 11:29:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2020-04-13 11:29:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2020-04-13 11:29:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2020-04-13 11:29:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2020-04-13 11:29:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2020-04-13 11:29:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list(javax.servlet.http.HttpServletRequest)
2020-04-13 11:29:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-04-13 11:29:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2020-04-13 11:29:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2020-04-13 11:29:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2020-04-13 11:29:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 11:29:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2020-04-13 11:29:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2020-04-13 11:29:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2020-04-13 11:29:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2020-04-13 11:29:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2020-04-13 11:29:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2020-04-13 11:29:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2020-04-13 11:29:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2020-04-13 11:29:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2020-04-13 11:29:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-04-13 11:29:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-04-13 11:29:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-04-13 11:29:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-04-13 11:29:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-04-13 11:29:01 -Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-13 11:29:01 -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-04-13 11:29:01 -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-04-13 11:29:01 -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 11:29:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2020-04-13 11:29:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2020-04-13 11:29:01 -Initializing ExecutorService  'brokerChannelExecutor'
2020-04-13 11:29:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 11:29:01 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b03b9fe: startup date [Mon Apr 13 11:28:29 CST 2020]; root of context hierarchy
2020-04-13 11:29:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 11:29:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 11:29:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 11:29:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2020-04-13 11:29:01 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2020-04-13 11:29:02 -Registering beans for JMX exposure on startup
2020-04-13 11:29:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2020-04-13 11:29:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2020-04-13 11:29:02 -Starting beans in phase 2147483647
2020-04-13 11:29:02 -Context refreshed
2020-04-13 11:29:02 -Found 1 custom documentation plugin(s)
2020-04-13 11:29:02 -Scanning for api listing references
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_1
2020-04-13 11:29:03 -Generating unique operation named: addUsingGET_1
2020-04-13 11:29:03 -Generating unique operation named: editUsingGET_1
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_1
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_2
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_3
2020-04-13 11:29:03 -Generating unique operation named: saveUsingPOST_1
2020-04-13 11:29:03 -Generating unique operation named: updateUsingGET_1
2020-04-13 11:29:03 -Generating unique operation named: updateUsingHEAD_1
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPOST_1
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPUT_1
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPATCH_1
2020-04-13 11:29:03 -Generating unique operation named: updateUsingDELETE_1
2020-04-13 11:29:03 -Generating unique operation named: updateUsingOPTIONS_1
2020-04-13 11:29:03 -Generating unique operation named: updateUsingTRACE_1
2020-04-13 11:29:03 -Generating unique operation named: addUsingGET_2
2020-04-13 11:29:03 -Generating unique operation named: editUsingGET_2
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_2
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_4
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_5
2020-04-13 11:29:03 -Generating unique operation named: saveUsingPOST_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingGET_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingHEAD_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPOST_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPUT_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPATCH_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingDELETE_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingOPTIONS_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingTRACE_2
2020-04-13 11:29:03 -Generating unique operation named: addUsingGET_3
2020-04-13 11:29:03 -Generating unique operation named: editUsingGET_3
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_3
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_6
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_7
2020-04-13 11:29:03 -Generating unique operation named: saveUsingPOST_3
2020-04-13 11:29:03 -Generating unique operation named: updateUsingGET_3
2020-04-13 11:29:03 -Generating unique operation named: updateUsingHEAD_3
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPOST_3
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPUT_3
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPATCH_3
2020-04-13 11:29:03 -Generating unique operation named: updateUsingDELETE_3
2020-04-13 11:29:03 -Generating unique operation named: updateUsingOPTIONS_3
2020-04-13 11:29:03 -Generating unique operation named: updateUsingTRACE_3
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_4
2020-04-13 11:29:03 -Generating unique operation named: editUsingGET_4
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_5
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPOST_4
2020-04-13 11:29:03 -Generating unique operation named: addUsingGET_4
2020-04-13 11:29:03 -Generating unique operation named: editUsingGET_5
2020-04-13 11:29:03 -Generating unique operation named: infoUsingGET_1
2020-04-13 11:29:03 -Generating unique operation named: infoUsingHEAD_1
2020-04-13 11:29:03 -Generating unique operation named: infoUsingPOST_1
2020-04-13 11:29:03 -Generating unique operation named: infoUsingPUT_1
2020-04-13 11:29:03 -Generating unique operation named: infoUsingPATCH_1
2020-04-13 11:29:03 -Generating unique operation named: infoUsingDELETE_1
2020-04-13 11:29:03 -Generating unique operation named: infoUsingOPTIONS_1
2020-04-13 11:29:03 -Generating unique operation named: infoUsingTRACE_1
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_6
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_8
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_9
2020-04-13 11:29:03 -Generating unique operation named: saveUsingPOST_4
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPOST_5
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_7
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_10
2020-04-13 11:29:03 -Generating unique operation named: indexUsingGET_1
2020-04-13 11:29:03 -Generating unique operation named: welcomeUsingGET_1
2020-04-13 11:29:03 -Generating unique operation named: addUsingGET_5
2020-04-13 11:29:03 -Generating unique operation named: editUsingGET_6
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_8
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_11
2020-04-13 11:29:03 -Generating unique operation named: saveUsingPOST_5
2020-04-13 11:29:03 -Generating unique operation named: treeUsingGET_1
2020-04-13 11:29:03 -Generating unique operation named: treeUsingGET_2
2020-04-13 11:29:03 -Generating unique operation named: updateUsingPOST_6
2020-04-13 11:29:03 -Generating unique operation named: batchRemoveUsingPOST_1
2020-04-13 11:29:03 -Generating unique operation named: editUsingGET_7
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_9
2020-04-13 11:29:03 -Generating unique operation named: addUsingGET_6
2020-04-13 11:29:03 -Generating unique operation named: editUsingGET_8
2020-04-13 11:29:03 -Generating unique operation named: listUsingGET_10
2020-04-13 11:29:03 -Generating unique operation named: removeUsingPOST_12
2020-04-13 11:29:04 -Generating unique operation named: removeUsingPOST_13
2020-04-13 11:29:04 -Generating unique operation named: saveUsingPOST_6
2020-04-13 11:29:04 -Generating unique operation named: updateUsingGET_4
2020-04-13 11:29:04 -Generating unique operation named: updateUsingHEAD_4
2020-04-13 11:29:04 -Generating unique operation named: updateUsingPOST_7
2020-04-13 11:29:04 -Generating unique operation named: updateUsingPUT_4
2020-04-13 11:29:04 -Generating unique operation named: updateUsingPATCH_4
2020-04-13 11:29:04 -Generating unique operation named: updateUsingDELETE_4
2020-04-13 11:29:04 -Generating unique operation named: updateUsingOPTIONS_4
2020-04-13 11:29:04 -Generating unique operation named: updateUsingTRACE_4
2020-04-13 11:29:04 -Generating unique operation named: handleUsingGET_1
2020-04-13 11:29:04 -Generating unique operation named: addUsingGET_7
2020-04-13 11:29:04 -Generating unique operation named: batchRemoveUsingPOST_2
2020-04-13 11:29:04 -Generating unique operation named: deployUsingPOST_1
2020-04-13 11:29:04 -Generating unique operation named: listUsingGET_11
2020-04-13 11:29:04 -Generating unique operation named: removeUsingPOST_14
2020-04-13 11:29:04 -Generating unique operation named: addUsingGET_8
2020-04-13 11:29:04 -Generating unique operation named: batchRemoveUsingPOST_3
2020-04-13 11:29:04 -Generating unique operation named: editUsingGET_9
2020-04-13 11:29:04 -Generating unique operation named: listUsingGET_12
2020-04-13 11:29:04 -Generating unique operation named: saveUsingPOST_7
2020-04-13 11:29:04 -Generating unique operation named: saveUsingPOST_8
2020-04-13 11:29:04 -Generating unique operation named: updateUsingPOST_8
2020-04-13 11:29:04 -Generating unique operation named: addUsingGET_9
2020-04-13 11:29:04 -Generating unique operation named: editUsingGET_10
2020-04-13 11:29:04 -Generating unique operation named: listUsingGET_13
2020-04-13 11:29:04 -Generating unique operation named: removeUsingPOST_15
2020-04-13 11:29:04 -Generating unique operation named: removeUsingPOST_16
2020-04-13 11:29:04 -Generating unique operation named: updateUsingGET_5
2020-04-13 11:29:04 -Generating unique operation named: updateUsingHEAD_5
2020-04-13 11:29:04 -Generating unique operation named: updateUsingPOST_9
2020-04-13 11:29:04 -Generating unique operation named: updateUsingPUT_5
2020-04-13 11:29:04 -Generating unique operation named: updateUsingPATCH_5
2020-04-13 11:29:04 -Generating unique operation named: updateUsingDELETE_5
2020-04-13 11:29:04 -Generating unique operation named: updateUsingOPTIONS_5
2020-04-13 11:29:04 -Generating unique operation named: updateUsingTRACE_5
2020-04-13 11:29:04 -Generating unique operation named: listUsingGET_14
2020-04-13 11:29:04 -Generating unique operation named: listUsingHEAD_1
2020-04-13 11:29:04 -Generating unique operation named: listUsingPOST_1
2020-04-13 11:29:04 -Generating unique operation named: listUsingPUT_1
2020-04-13 11:29:04 -Generating unique operation named: listUsingPATCH_1
2020-04-13 11:29:04 -Generating unique operation named: listUsingDELETE_1
2020-04-13 11:29:04 -Generating unique operation named: listUsingOPTIONS_1
2020-04-13 11:29:04 -Generating unique operation named: listUsingTRACE_1
2020-04-13 11:29:04 -Generating unique operation named: listUsingGET_15
2020-04-13 11:29:04 -Generating unique operation named: addUsingGET_10
2020-04-13 11:29:04 -Generating unique operation named: batchRemoveUsingPOST_4
2020-04-13 11:29:04 -Generating unique operation named: editUsingGET_11
2020-04-13 11:29:04 -Generating unique operation named: listUsingGET_16
2020-04-13 11:29:04 -Generating unique operation named: removeUsingPOST_17
2020-04-13 11:29:04 -Generating unique operation named: saveUsingPOST_9
2020-04-13 11:29:04 -Generating unique operation named: treeUsingGET_3
2020-04-13 11:29:04 -Generating unique operation named: treeViewUsingGET_1
2020-04-13 11:29:04 -Generating unique operation named: updateUsingPOST_10
2020-04-13 11:29:04 -Starting Quartz Scheduler now
2020-04-13 11:29:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-13 11:29:04 -Starting...
2020-04-13 11:29:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-04-13 11:29:04 -Started.
2020-04-13 11:29:04 -Starting ProtocolHandler ["http-nio-8888"]
2020-04-13 11:29:04 -Using a shared selector for servlet write/read
2020-04-13 11:29:04 -Tomcat started on port(s): 8888 (http) with context path ''
2020-04-13 11:29:04 -Started BootdoApplication in 35.167 seconds (JVM running for 36.565)
2020-04-13 11:29:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2020-04-13 11:29:04 -==> Parameters: 
2020-04-13 11:29:04 -<==      Total: 2
2020-04-13 11:29:24 -A cookie header was received [1581676267; adultFemale=%221976-06-20%2C43%2C1%2C1585106766387%22; juvenileFemale=%222011-04-04%2C9%2C1%2C1586231039950%22; isUserNameSaved=1; phoneSaved=%2218823786682%22; areaCode=%22SCPGPL%22; typewhere=8755; juvenileMale=%222011-04-04%2C9%2C0%2C1586744812379%22; browseInfo=%5B%7B%22url%22%3A%22http%3A//localhost/web-zhongmin/family/detail/ip9278_is1.html%22%2C%22productImg%22%3A%22//images.zhongmin.cn/images/2018/320/9278.jpg%22%2C%22productName%22%3A%22%u624B%u673A%u652F%u4ED8%u8D44%u91D1%u635F%u5931%u4FDD%u969C%u8BA1%u5212%22%2C%22price%22%3A%223%22%2C%22pid%22%3A9278%7D%2C%7B%22url%22%3A%22http%3A//localhost/web-zhongmin/family/detail/ip9279_is1.html%22%2C%22productImg%22%3A%22//images.zhongmin.cn/images/2018/320/9279.jpg%22%2C%22productName%22%3A%22%u7535%u8111%u7F51%u4E0A%u652F%u4ED8%u8D44%u91D1%u635F%u5931%u4FDD%u969C%u8BA1%u5212%22%2C%22price%22%3A%223%22%2C%22pid%22%3A9279%7D%2C%7B%22url%22%3A%22http%3A//localhost/web-zhongmin/family/detail/ip9280_is1.html%22%2C%22productImg%22%3A%22//images.zhongmin.cn/images/2018/320/9280.jpg%22%2C%22productName%22%3A%22%u94F6%u884C%u5361%u652F%u4ED8%u8D44%u91D1%u635F%u5931%u4FDD%u969C%u8BA1%u5212%22%2C%22price%22%3A%223%22%2C%22pid%22%3A9280%7D%2C%7B%22url%22%3A%22http%3A//localhost/web-zhongmin/accid/detail/ip8217_is1.html%22%2C%22productImg%22%3A%22//images.zhongmin.cn/images/2018/320/8217.jpg%22%2C%22productName%22%3A%22%u6613%u5B89%u4F4F%u9662%u65E0%u5FE7%u6210%u4EBA%u5C0A%u4EAB%u4FDD%u969C%u8BA1%u5212%uFF08%u7EED%u4FDD%u7248%uFF09%22%2C%22price%22%3A%22280%22%2C%22pid%22%3A8217%7D%2C%7B%22url%22%3A%22http%3A//localhost/web-zhongmin/annuity/detail/is1_ip12569.html%22%2C%22productImg%22%3A%22//images.zhongmin.cn/images/2018/320/12569.jpg%22%2C%22productName%22%3A%22%u6052%u5B89%u6807%u51C6%u6052%u76C8%u5E74%u5E74%u5E74%u91D1%u4FDD%u9669%22%2C%22price%22%3A%2210000%22%2C%22pid%22%3A12569%7D%5D] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2020-04-13 11:29:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-04-13 11:29:24 -FrameworkServlet 'dispatcherServlet': initialization started
2020-04-13 11:29:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2020-04-13 11:29:24 -Enabling session validation scheduler...
2020-04-13 11:29:24 -请求地址 : http://localhost:8888/
2020-04-13 11:29:24 -HTTP METHOD : GET
2020-04-13 11:29:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2020-04-13 11:29:24 -参数 : [{}]
2020-04-13 11:29:24 -耗时 : 1
2020-04-13 11:29:24 -返回值 : redirect:/blog
2020-04-13 11:29:24 -请求地址 : http://localhost:8888/blog
2020-04-13 11:29:24 -HTTP METHOD : GET
2020-04-13 11:29:24 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2020-04-13 11:29:24 -参数 : []
2020-04-13 11:29:24 -耗时 : 0
2020-04-13 11:29:24 -返回值 : blog/index/main
2020-04-13 11:29:25 -请求地址 : http://localhost:8888/blog/open/list
2020-04-13 11:29:25 -HTTP METHOD : GET
2020-04-13 11:29:25 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2020-04-13 11:29:25 -参数 : [{type=article, limit=10, offset=0}]
2020-04-13 11:29:25 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2020-04-13 11:29:25 -==> Parameters: article(String)
2020-04-13 11:29:25 -<==      Total: 10
2020-04-13 11:29:25 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2020-04-13 11:29:25 -==> Parameters: article(String)
2020-04-13 11:29:25 -<==      Total: 1
2020-04-13 11:29:25 -耗时 : 62
2020-04-13 11:29:25 -返回值 : com.bootdo.common.utils.PageUtils@6d356b44
2020-04-13 11:29:25 -请求地址 : http://localhost:8888/login;JSESSIONID=18f24722-0240-45a5-be48-9b3186352ccb
2020-04-13 11:29:25 -HTTP METHOD : GET
2020-04-13 11:29:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 11:29:25 -参数 : []
2020-04-13 11:29:25 -耗时 : 0
2020-04-13 11:29:25 -返回值 : login
2020-04-13 11:29:30 -请求地址 : http://localhost:8888/blog
2020-04-13 11:29:30 -HTTP METHOD : GET
2020-04-13 11:29:30 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2020-04-13 11:29:30 -参数 : []
2020-04-13 11:29:30 -耗时 : 1
2020-04-13 11:29:30 -返回值 : blog/index/main
2020-04-13 11:29:30 -请求地址 : http://localhost:8888/blog/open/list
2020-04-13 11:29:30 -HTTP METHOD : GET
2020-04-13 11:29:30 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2020-04-13 11:29:30 -参数 : [{type=article, limit=10, offset=0}]
2020-04-13 11:29:30 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2020-04-13 11:29:30 -==> Parameters: article(String)
2020-04-13 11:29:30 -<==      Total: 10
2020-04-13 11:29:30 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2020-04-13 11:29:30 -==> Parameters: article(String)
2020-04-13 11:29:30 -<==      Total: 1
2020-04-13 11:29:30 -耗时 : 25
2020-04-13 11:29:30 -返回值 : com.bootdo.common.utils.PageUtils@2ab807fe
2020-04-13 11:29:31 -请求地址 : http://localhost:8888/login
2020-04-13 11:29:31 -HTTP METHOD : GET
2020-04-13 11:29:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 11:29:31 -参数 : []
2020-04-13 11:29:31 -耗时 : 1
2020-04-13 11:29:31 -返回值 : login
2020-04-13 11:30:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2020-04-13 11:31:49 -请求地址 : http://localhost:8888/blog
2020-04-13 11:31:49 -HTTP METHOD : GET
2020-04-13 11:31:49 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2020-04-13 11:31:49 -参数 : []
2020-04-13 11:31:49 -耗时 : 0
2020-04-13 11:31:49 -返回值 : blog/index/main
2020-04-13 11:31:50 -请求地址 : http://localhost:8888/blog/open/list
2020-04-13 11:31:50 -HTTP METHOD : GET
2020-04-13 11:31:50 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2020-04-13 11:31:50 -参数 : [{type=article, limit=10, offset=0}]
2020-04-13 11:31:50 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2020-04-13 11:31:50 -==> Parameters: article(String)
2020-04-13 11:31:50 -<==      Total: 10
2020-04-13 11:31:50 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2020-04-13 11:31:50 -==> Parameters: article(String)
2020-04-13 11:31:50 -<==      Total: 1
2020-04-13 11:31:50 -耗时 : 16
2020-04-13 11:31:50 -返回值 : com.bootdo.common.utils.PageUtils@612dc74d
2020-04-13 11:32:15 -请求地址 : http://localhost:8888/login
2020-04-13 11:32:15 -HTTP METHOD : GET
2020-04-13 11:32:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 11:32:15 -参数 : []
2020-04-13 11:32:15 -耗时 : 0
2020-04-13 11:32:15 -返回值 : login
2020-04-13 11:34:46 -请求地址 : http://localhost:8888/blog/open/list
2020-04-13 11:34:46 -HTTP METHOD : GET
2020-04-13 11:34:46 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2020-04-13 11:34:46 -参数 : [{type=article, limit=10, offset=10}]
2020-04-13 11:34:46 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 10, 10 
2020-04-13 11:34:46 -==> Parameters: article(String)
2020-04-13 11:34:46 -<==      Total: 0
2020-04-13 11:34:46 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2020-04-13 11:34:46 -==> Parameters: article(String)
2020-04-13 11:34:46 -<==      Total: 1
2020-04-13 11:34:46 -耗时 : 7
2020-04-13 11:34:46 -返回值 : com.bootdo.common.utils.PageUtils@28be3e7d
2020-04-13 11:55:49 -请求地址 : http://localhost:8888/blog/open/post/75
2020-04-13 11:55:49 -HTTP METHOD : GET
2020-04-13 11:55:49 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.post
2020-04-13 11:55:49 -参数 : [75, {}]
2020-04-13 11:55:49 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content where cid = ? 
2020-04-13 11:55:49 -==> Parameters: 75(Long)
2020-04-13 11:55:49 -<==      Total: 1
2020-04-13 11:55:49 -耗时 : 5
2020-04-13 11:55:49 -返回值 : blog/index/post
2020-04-13 11:55:50 -请求地址 : http://localhost:8888/login
2020-04-13 11:55:50 -HTTP METHOD : GET
2020-04-13 11:55:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 11:55:50 -参数 : []
2020-04-13 11:55:50 -耗时 : 0
2020-04-13 11:55:50 -返回值 : login
2020-04-13 11:56:06 -请求地址 : http://localhost:8888/blog/open/post/75
2020-04-13 11:56:06 -HTTP METHOD : GET
2020-04-13 11:56:06 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.post
2020-04-13 11:56:06 -参数 : [75, {}]
2020-04-13 11:56:06 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content where cid = ? 
2020-04-13 11:56:06 -==> Parameters: 75(Long)
2020-04-13 11:56:06 -<==      Total: 1
2020-04-13 11:56:06 -耗时 : 4
2020-04-13 11:56:06 -返回值 : blog/index/post
2020-04-13 11:56:21 -请求地址 : http://localhost:8888/login
2020-04-13 11:56:21 -HTTP METHOD : GET
2020-04-13 11:56:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 11:56:21 -参数 : []
2020-04-13 11:56:21 -耗时 : 0
2020-04-13 11:56:21 -返回值 : login
2020-04-13 11:56:28 -请求地址 : http://localhost:8888/blog/open/post/75
2020-04-13 11:56:28 -HTTP METHOD : GET
2020-04-13 11:56:28 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.post
2020-04-13 11:56:28 -参数 : [75, {}]
2020-04-13 11:56:28 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content where cid = ? 
2020-04-13 11:56:28 -==> Parameters: 75(Long)
2020-04-13 11:56:28 -<==      Total: 1
2020-04-13 11:56:28 -耗时 : 6
2020-04-13 11:56:28 -返回值 : blog/index/post
2020-04-13 11:56:45 -请求地址 : http://localhost:8888/login
2020-04-13 11:56:45 -HTTP METHOD : GET
2020-04-13 11:56:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 11:56:45 -参数 : []
2020-04-13 11:56:45 -耗时 : 0
2020-04-13 11:56:45 -返回值 : login
2020-04-13 12:00:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2020-04-13 12:29:24 -Validating all active sessions...
2020-04-13 12:29:24 -Finished session validation.  [1] sessions were stopped.
2020-04-13 12:30:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2020-04-13 13:00:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2020-04-13 13:29:24 -Validating all active sessions...
2020-04-13 13:29:24 -Finished session validation.  No sessions were stopped.
2020-04-13 13:30:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 4]
2020-04-13 13:36:54 -请求地址 : http://localhost:8888/login;JSESSIONID=1d727b25-ff45-4844-aec5-4347abb6ddbe
2020-04-13 13:36:54 -HTTP METHOD : GET
2020-04-13 13:36:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:36:54 -参数 : []
2020-04-13 13:36:54 -耗时 : 0
2020-04-13 13:36:54 -返回值 : login
2020-04-13 13:36:57 -请求地址 : http://localhost:8888/blog/open/page/about
2020-04-13 13:36:57 -HTTP METHOD : GET
2020-04-13 13:36:57 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.about
2020-04-13 13:36:57 -参数 : [about, {}]
2020-04-13 13:36:57 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE categories = ? order by cid desc 
2020-04-13 13:36:57 -==> Parameters: about(String)
2020-04-13 13:36:57 -<==      Total: 1
2020-04-13 13:36:57 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE categories = ? order by cid desc 
2020-04-13 13:36:57 -==> Parameters: about(String)
2020-04-13 13:36:57 -<==      Total: 1
2020-04-13 13:36:57 -耗时 : 9
2020-04-13 13:36:57 -返回值 : blog/index/post
2020-04-13 13:36:57 -请求地址 : http://localhost:8888/login
2020-04-13 13:36:57 -HTTP METHOD : GET
2020-04-13 13:36:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:36:57 -参数 : []
2020-04-13 13:36:57 -耗时 : 1
2020-04-13 13:36:57 -返回值 : login
2020-04-13 13:37:03 -请求地址 : http://localhost:8888/
2020-04-13 13:37:03 -HTTP METHOD : GET
2020-04-13 13:37:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2020-04-13 13:37:03 -参数 : [{}]
2020-04-13 13:37:03 -耗时 : 0
2020-04-13 13:37:03 -返回值 : redirect:/blog
2020-04-13 13:37:03 -请求地址 : http://localhost:8888/blog
2020-04-13 13:37:03 -HTTP METHOD : GET
2020-04-13 13:37:03 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2020-04-13 13:37:03 -参数 : []
2020-04-13 13:37:03 -耗时 : 0
2020-04-13 13:37:03 -返回值 : blog/index/main
2020-04-13 13:37:03 -请求地址 : http://localhost:8888/blog/open/list
2020-04-13 13:37:03 -HTTP METHOD : GET
2020-04-13 13:37:03 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2020-04-13 13:37:03 -参数 : [{type=article, limit=10, offset=0}]
2020-04-13 13:37:03 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2020-04-13 13:37:03 -==> Parameters: article(String)
2020-04-13 13:37:03 -<==      Total: 10
2020-04-13 13:37:03 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2020-04-13 13:37:03 -==> Parameters: article(String)
2020-04-13 13:37:03 -<==      Total: 1
2020-04-13 13:37:03 -耗时 : 23
2020-04-13 13:37:03 -返回值 : com.bootdo.common.utils.PageUtils@7b9e675d
2020-04-13 13:37:06 -请求地址 : http://localhost:8888/login
2020-04-13 13:37:06 -HTTP METHOD : GET
2020-04-13 13:37:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:37:06 -参数 : []
2020-04-13 13:37:06 -耗时 : 0
2020-04-13 13:37:06 -返回值 : login
2020-04-13 13:37:08 -请求地址 : http://localhost:8888/blog/open/page/communication
2020-04-13 13:37:08 -HTTP METHOD : GET
2020-04-13 13:37:08 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.about
2020-04-13 13:37:08 -参数 : [communication, {}]
2020-04-13 13:37:08 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE categories = ? order by cid desc 
2020-04-13 13:37:08 -==> Parameters: communication(String)
2020-04-13 13:37:08 -<==      Total: 1
2020-04-13 13:37:08 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE categories = ? order by cid desc 
2020-04-13 13:37:08 -==> Parameters: communication(String)
2020-04-13 13:37:08 -<==      Total: 1
2020-04-13 13:37:08 -耗时 : 13
2020-04-13 13:37:08 -返回值 : blog/index/post
2020-04-13 13:37:08 -请求地址 : http://localhost:8888/login
2020-04-13 13:37:08 -HTTP METHOD : GET
2020-04-13 13:37:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:37:08 -参数 : []
2020-04-13 13:37:08 -耗时 : 1
2020-04-13 13:37:08 -返回值 : login
2020-04-13 13:37:12 -请求地址 : http://localhost:8888/login
2020-04-13 13:37:12 -HTTP METHOD : GET
2020-04-13 13:37:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:37:12 -参数 : []
2020-04-13 13:37:12 -耗时 : 0
2020-04-13 13:37:12 -返回值 : login
2020-04-13 13:37:12 -请求地址 : http://localhost:8888/login
2020-04-13 13:37:12 -HTTP METHOD : GET
2020-04-13 13:37:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:37:12 -参数 : []
2020-04-13 13:37:12 -耗时 : 0
2020-04-13 13:37:12 -返回值 : login
2020-04-13 13:37:14 -请求地址 : http://localhost:8888/login
2020-04-13 13:37:14 -HTTP METHOD : GET
2020-04-13 13:37:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:37:14 -参数 : []
2020-04-13 13:37:14 -耗时 : 0
2020-04-13 13:37:14 -返回值 : login
2020-04-13 13:37:16 -请求地址 : http://localhost:8888/
2020-04-13 13:37:16 -HTTP METHOD : GET
2020-04-13 13:37:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2020-04-13 13:37:16 -参数 : [{}]
2020-04-13 13:37:16 -耗时 : 0
2020-04-13 13:37:16 -返回值 : redirect:/blog
2020-04-13 13:37:16 -请求地址 : http://localhost:8888/blog
2020-04-13 13:37:16 -HTTP METHOD : GET
2020-04-13 13:37:16 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2020-04-13 13:37:16 -参数 : []
2020-04-13 13:37:16 -耗时 : 0
2020-04-13 13:37:16 -返回值 : blog/index/main
2020-04-13 13:37:16 -请求地址 : http://localhost:8888/blog/open/list
2020-04-13 13:37:16 -HTTP METHOD : GET
2020-04-13 13:37:16 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2020-04-13 13:37:16 -参数 : [{type=article, limit=10, offset=0}]
2020-04-13 13:37:16 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2020-04-13 13:37:16 -==> Parameters: article(String)
2020-04-13 13:37:16 -<==      Total: 10
2020-04-13 13:37:16 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2020-04-13 13:37:16 -==> Parameters: article(String)
2020-04-13 13:37:16 -<==      Total: 1
2020-04-13 13:37:16 -耗时 : 15
2020-04-13 13:37:16 -返回值 : com.bootdo.common.utils.PageUtils@1a9fce5a
2020-04-13 13:37:19 -请求地址 : http://localhost:8888/login
2020-04-13 13:37:19 -HTTP METHOD : GET
2020-04-13 13:37:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:37:19 -参数 : []
2020-04-13 13:37:19 -耗时 : 0
2020-04-13 13:37:19 -返回值 : login
2020-04-13 13:37:23 -请求地址 : http://localhost:8888/blog/open/post/119
2020-04-13 13:37:23 -HTTP METHOD : GET
2020-04-13 13:37:23 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.post
2020-04-13 13:37:23 -参数 : [119, {}]
2020-04-13 13:37:23 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content where cid = ? 
2020-04-13 13:37:23 -==> Parameters: 119(Long)
2020-04-13 13:37:23 -<==      Total: 1
2020-04-13 13:37:23 -耗时 : 5
2020-04-13 13:37:23 -返回值 : blog/index/post
2020-04-13 13:37:23 -请求地址 : http://localhost:8888/login
2020-04-13 13:37:23 -HTTP METHOD : GET
2020-04-13 13:37:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 13:37:23 -参数 : []
2020-04-13 13:37:23 -耗时 : 0
2020-04-13 13:37:23 -返回值 : login
2020-04-13 14:00:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 5]
2020-04-13 14:22:00 -请求地址 : http://localhost:8888/
2020-04-13 14:22:00 -HTTP METHOD : GET
2020-04-13 14:22:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2020-04-13 14:22:00 -参数 : [{}]
2020-04-13 14:22:00 -耗时 : 0
2020-04-13 14:22:00 -返回值 : redirect:/blog
2020-04-13 14:22:00 -请求地址 : http://localhost:8888/blog
2020-04-13 14:22:00 -HTTP METHOD : GET
2020-04-13 14:22:00 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2020-04-13 14:22:00 -参数 : []
2020-04-13 14:22:00 -耗时 : 0
2020-04-13 14:22:00 -返回值 : blog/index/main
2020-04-13 14:22:00 -请求地址 : http://localhost:8888/blog/open/list
2020-04-13 14:22:00 -HTTP METHOD : GET
2020-04-13 14:22:00 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2020-04-13 14:22:00 -参数 : [{type=article, limit=10, offset=0}]
2020-04-13 14:22:00 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2020-04-13 14:22:00 -==> Parameters: article(String)
2020-04-13 14:22:00 -<==      Total: 10
2020-04-13 14:22:00 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2020-04-13 14:22:00 -==> Parameters: article(String)
2020-04-13 14:22:00 -<==      Total: 1
2020-04-13 14:22:00 -耗时 : 12
2020-04-13 14:22:00 -返回值 : com.bootdo.common.utils.PageUtils@e32b4a2
2020-04-13 14:22:00 -请求地址 : http://localhost:8888/login;JSESSIONID=7f07ecad-ddc8-438f-b621-4949483fb9cc
2020-04-13 14:22:00 -HTTP METHOD : GET
2020-04-13 14:22:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 14:22:00 -参数 : []
2020-04-13 14:22:00 -耗时 : 0
2020-04-13 14:22:00 -返回值 : login
2020-04-13 14:22:02 -请求地址 : http://localhost:8888/login
2020-04-13 14:22:02 -HTTP METHOD : GET
2020-04-13 14:22:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 14:22:02 -参数 : []
2020-04-13 14:22:02 -耗时 : 0
2020-04-13 14:22:02 -返回值 : login
2020-04-13 14:22:02 -请求地址 : http://localhost:8888/login
2020-04-13 14:22:02 -HTTP METHOD : GET
2020-04-13 14:22:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-13 14:22:02 -参数 : []
2020-04-13 14:22:02 -耗时 : 0
2020-04-13 14:22:02 -返回值 : login
2020-04-13 14:22:03 -请求地址 : http://localhost:8888/login
2020-04-13 14:22:03 -HTTP METHOD : POST
2020-04-13 14:22:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2020-04-13 14:22:03 -参数 : [admin, 111111]
2020-04-13 14:22:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2020-04-13 14:22:03 -==> Parameters: admin(String)
2020-04-13 14:22:03 -<==      Total: 1
2020-04-13 14:22:03 -耗时 : 36
2020-04-13 14:22:03 -返回值 : {msg=操作成功, code=0}
2020-04-13 14:22:03 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2020-04-13 14:22:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-04-13 14:22:03 -==> Parameters: 1(Long), admin(String), 登录(String), 36(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2020-04-13 14:22:03.892(Timestamp)
2020-04-13 14:22:03 -请求地址 : http://localhost:8888/index
2020-04-13 14:22:03 -HTTP METHOD : GET
2020-04-13 14:22:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2020-04-13 14:22:03 -参数 : [{}]
2020-04-13 14:22:03 -<==    Updates: 1
2020-04-13 14:22:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2020-04-13 14:22:03 -==> Parameters: 1(Long)
2020-04-13 14:22:03 -<==      Total: 28
2020-04-13 14:22:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2020-04-13 14:22:03 -==> Parameters: 145(Long)
2020-04-13 14:22:03 -<==      Total: 1
2020-04-13 14:22:03 -耗时 : 45
2020-04-13 14:22:03 -返回值 : index_v1
2020-04-13 14:22:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-04-13 14:22:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 45(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2020-04-13 14:22:03.997(Timestamp)
2020-04-13 14:22:04 -<==    Updates: 1
2020-04-13 14:22:04 -请求地址 : http://localhost:8888/main
2020-04-13 14:22:04 -HTTP METHOD : GET
2020-04-13 14:22:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-04-13 14:22:04 -参数 : []
2020-04-13 14:22:04 -耗时 : 0
2020-04-13 14:22:04 -返回值 : main
2020-04-13 14:22:04 -请求地址 : http://localhost:8888/oa/notify/message
2020-04-13 14:22:04 -HTTP METHOD : GET
2020-04-13 14:22:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2020-04-13 14:22:04 -参数 : []
2020-04-13 14:22:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2020-04-13 14:22:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2020-04-13 14:22:04 -<==      Total: 1
2020-04-13 14:22:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-13 14:22:04 -==> Parameters: 1(Long)
2020-04-13 14:22:04 -<==      Total: 1
2020-04-13 14:22:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2020-04-13 14:22:04 -==> Parameters: 1(Long), 0(String)
2020-04-13 14:22:04 -<==      Total: 1
2020-04-13 14:22:04 -耗时 : 25
2020-04-13 14:22:04 -返回值 : com.bootdo.common.utils.PageUtils@2031428e
2020-04-13 14:22:04 -请求地址 : http://localhost:8888/main
2020-04-13 14:22:04 -HTTP METHOD : GET
2020-04-13 14:22:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-04-13 14:22:04 -参数 : []
2020-04-13 14:22:04 -耗时 : 0
2020-04-13 14:22:04 -返回值 : main
2020-04-13 14:22:06 -请求地址 : http://localhost:8888/activiti/task/todo
2020-04-13 14:22:06 -HTTP METHOD : GET
2020-04-13 14:22:06 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todo
2020-04-13 14:22:06 -参数 : []
2020-04-13 14:22:06 -耗时 : 0
2020-04-13 14:22:06 -返回值 : ModelAndView: reference to view with name 'act/task/todoTask'; model is null
2020-04-13 14:22:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2020-04-13 14:22:06 -==> Parameters: 1(Long)
2020-04-13 14:22:06 -<==      Total: 47
2020-04-13 14:22:06 -请求地址 : http://localhost:8888/activiti/task/todoList
2020-04-13 14:22:06 -HTTP METHOD : GET
2020-04-13 14:22:06 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todoList
2020-04-13 14:22:06 -参数 : []
2020-04-13 14:22:06 -请求地址 : http://localhost:8888/activiti/task/gotoList
2020-04-13 14:22:06 -HTTP METHOD : GET
2020-04-13 14:22:06 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.list
2020-04-13 14:22:06 -参数 : [0, 10]
2020-04-13 14:22:06 -耗时 : 24
2020-04-13 14:22:06 -返回值 : [com.bootdo.activiti.vo.TaskVO@6b52754c, com.bootdo.activiti.vo.TaskVO@3095c7a3]
2020-04-13 14:22:06 -耗时 : 27
2020-04-13 14:22:06 -返回值 : com.bootdo.common.utils.PageUtils@7670b716
2020-04-13 14:22:08 -请求地址 : http://localhost:8888/activiti/task/form/salary:3:135067/147518
2020-04-13 14:22:08 -HTTP METHOD : GET
2020-04-13 14:22:08 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.form
2020-04-13 14:22:08 -参数 : [salary:3:135067, 147518, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36b075c0]
2020-04-13 14:22:08 -Processing resource 流程审批测试流程.bpmn20.xml
2020-04-13 14:22:08 -Processing resource 流程审批测试流程.salary.png
2020-04-13 14:22:08 -耗时 : 154
2020-04-13 14:22:08 -返回值 : null
2020-04-13 14:22:08 -请求地址 : http://localhost:8888/act/salary/form/147518
2020-04-13 14:22:08 -HTTP METHOD : GET
2020-04-13 14:22:08 -CLASS_METHOD : com.bootdo.activiti.controller.SalaryController.edit
2020-04-13 14:22:08 -参数 : [147518, {}]
2020-04-13 14:22:09 -==>  Preparing: select `id`,`PROC_INS_ID`,`USER_ID`,`OFFICE_ID`,`POST`,`AGE`,`EDU`,`CONTENT`,`OLDA`,`OLDB`,`OLDC`,`NEWA`,`NEWB`,`NEWC`,`ADD_NUM`,`EXE_DATE`,`HR_TEXT`,`LEAD_TEXT`,`MAIN_LEAD_TEXT`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from salary where id = ? 
2020-04-13 14:22:09 -==> Parameters: f96f1c75634c4a988379b2c88b2cdafc(String)
2020-04-13 14:22:09 -<==      Total: 1
2020-04-13 14:22:09 -耗时 : 24
2020-04-13 14:22:09 -返回值 : act/salary/edit
2020-04-13 14:22:11 -请求地址 : http://localhost:8888/act/salary/update
2020-04-13 14:22:11 -HTTP METHOD : POST
2020-04-13 14:22:11 -CLASS_METHOD : com.bootdo.activiti.controller.SalaryController.update
2020-04-13 14:22:11 -参数 : [com.bootdo.activiti.domain.SalaryDO@18f34a45]
2020-04-13 14:22:11 -==>  Preparing: update salary SET `PROC_INS_ID` = ?, `USER_ID` = ?, `OFFICE_ID` = ?, `POST` = ?, `AGE` = ?, `EDU` = ?, `CONTENT` = ?, `OLDA` = ?, `OLDB` = ?, `OLDC` = ?, `NEWA` = ?, `NEWB` = ?, `NEWC` = ?, `ADD_NUM` = ?, `EXE_DATE` = ?, `HR_TEXT` = ?, `LEAD_TEXT` = ?, `MAIN_LEAD_TEXT` = ? where id = ? 
2020-04-13 14:22:11 -==> Parameters: (String), 136(String), 开发部(String), (String), (String), (String), ceshitiaozheng(String), (String), (String), (String), (String), 5000(String), (String), (String), 2019-01-01(String), (String), (String), (String), f96f1c75634c4a988379b2c88b2cdafc(String)
2020-04-13 14:22:11 -<==    Updates: 1
2020-04-13 14:22:11 -耗时 : 124
2020-04-13 14:22:11 -返回值 : {msg=操作成功, code=0}
2020-04-13 14:22:11 -请求地址 : http://localhost:8888/activiti/task/todoList
2020-04-13 14:22:11 -HTTP METHOD : GET
2020-04-13 14:22:11 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todoList
2020-04-13 14:22:11 -参数 : []
2020-04-13 14:22:11 -耗时 : 3
2020-04-13 14:22:11 -返回值 : [com.bootdo.activiti.vo.TaskVO@7e4cd403, com.bootdo.activiti.vo.TaskVO@302b9d35]
2020-04-13 14:22:13 -请求地址 : http://localhost:8888/activiti/task/trace/photo/salary:3:135067/147506
2020-04-13 14:22:13 -HTTP METHOD : GET
2020-04-13 14:22:13 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.tracePhoto
2020-04-13 14:22:13 -参数 : [salary:3:135067, 147506, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2069b066]
2020-04-13 14:22:14 -耗时 : 886
2020-04-13 14:22:14 -返回值 : null
2020-04-13 14:22:28 -请求地址 : http://localhost:8888/activiti/process
2020-04-13 14:22:28 -HTTP METHOD : GET
2020-04-13 14:22:28 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.process
2020-04-13 14:22:28 -参数 : []
2020-04-13 14:22:28 -耗时 : 1
2020-04-13 14:22:28 -返回值 : ModelAndView: reference to view with name 'act/process/process'; model is null
2020-04-13 14:22:28 -请求地址 : http://localhost:8888/activiti/process/list
2020-04-13 14:22:28 -HTTP METHOD : GET
2020-04-13 14:22:28 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.list
2020-04-13 14:22:28 -参数 : [0, 10]
2020-04-13 14:22:28 -耗时 : 8
2020-04-13 14:22:28 -返回值 : com.bootdo.common.utils.PageUtils@1d67a6f7
2020-04-13 14:22:32 -请求地址 : http://localhost:8888/activiti/process/convertToModel/salary:3:135067
2020-04-13 14:22:32 -HTTP METHOD : GET
2020-04-13 14:22:32 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.convertToModel
2020-04-13 14:22:32 -参数 : [salary:3:135067, {}]
2020-04-13 14:22:33 -耗时 : 78
2020-04-13 14:22:33 -返回值 : {msg=转换模型成功，模型ID=155005, code=0}
2020-04-13 14:22:33 -请求地址 : http://localhost:8888/activiti/process/list
2020-04-13 14:22:33 -HTTP METHOD : GET
2020-04-13 14:22:33 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.list
2020-04-13 14:22:33 -参数 : [0, 10]
2020-04-13 14:22:33 -耗时 : 5
2020-04-13 14:22:33 -返回值 : com.bootdo.common.utils.PageUtils@1b258848
2020-04-13 14:22:36 -请求地址 : http://localhost:8888/activiti/model
2020-04-13 14:22:36 -HTTP METHOD : GET
2020-04-13 14:22:36 -CLASS_METHOD : com.bootdo.activiti.controller.ModelController.model
2020-04-13 14:22:36 -参数 : []
2020-04-13 14:22:36 -耗时 : 1
2020-04-13 14:22:36 -返回值 : ModelAndView: reference to view with name 'act/model/model'; model is null
2020-04-13 14:22:36 -请求地址 : http://localhost:8888/activiti/model/list
2020-04-13 14:22:36 -HTTP METHOD : GET
2020-04-13 14:22:36 -CLASS_METHOD : com.bootdo.activiti.controller.ModelController.list
2020-04-13 14:22:36 -参数 : [0, 10]
2020-04-13 14:22:36 -耗时 : 11
2020-04-13 14:22:36 -返回值 : com.bootdo.common.utils.PageUtils@7e7d1600
2020-04-13 14:22:43 -请求地址 : http://localhost:8888/activiti/model/deploy/142501
2020-04-13 14:22:43 -HTTP METHOD : POST
2020-04-13 14:22:43 -CLASS_METHOD : com.bootdo.activiti.controller.ModelController.deploy
2020-04-13 14:22:43 -参数 : [142501]
2020-04-13 14:22:43 -Processing resource new-process.bpmn20.xml
2020-04-13 14:22:43 -耗时 : 374
2020-04-13 14:22:43 -返回值 : {msg=操作成功, code=0}
2020-04-13 14:22:43 -请求地址 : http://localhost:8888/activiti/model/list
2020-04-13 14:22:43 -HTTP METHOD : GET
2020-04-13 14:22:43 -CLASS_METHOD : com.bootdo.activiti.controller.ModelController.list
2020-04-13 14:22:43 -参数 : [0, 10]
2020-04-13 14:22:43 -耗时 : 14
2020-04-13 14:22:43 -返回值 : com.bootdo.common.utils.PageUtils@3ec9a528
2020-04-13 14:22:47 -请求地址 : http://localhost:8888/activiti/task/todo
2020-04-13 14:22:47 -HTTP METHOD : GET
2020-04-13 14:22:47 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todo
2020-04-13 14:22:47 -参数 : []
2020-04-13 14:22:47 -耗时 : 0
2020-04-13 14:22:47 -返回值 : ModelAndView: reference to view with name 'act/task/todoTask'; model is null
2020-04-13 14:22:47 -请求地址 : http://localhost:8888/activiti/task/todoList
2020-04-13 14:22:47 -HTTP METHOD : GET
2020-04-13 14:22:47 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todoList
2020-04-13 14:22:47 -参数 : []
2020-04-13 14:22:47 -耗时 : 4
2020-04-13 14:22:47 -返回值 : [com.bootdo.activiti.vo.TaskVO@1211df8b, com.bootdo.activiti.vo.TaskVO@25ce1ed9]
2020-04-13 14:22:47 -请求地址 : http://localhost:8888/activiti/task/gotoList
2020-04-13 14:22:47 -HTTP METHOD : GET
2020-04-13 14:22:47 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.list
2020-04-13 14:22:47 -参数 : [0, 10]
2020-04-13 14:22:47 -耗时 : 4
2020-04-13 14:22:47 -返回值 : com.bootdo.common.utils.PageUtils@2cb88866
2020-04-13 14:22:53 -请求地址 : http://localhost:8888/activiti/process/resource/read/image/process:1:145004
2020-04-13 14:22:53 -HTTP METHOD : GET
2020-04-13 14:22:53 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.resourceRead
2020-04-13 14:22:53 -参数 : [image, process:1:145004, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1b97e719]
2020-04-13 14:22:53 -耗时 : 6
2020-04-13 14:22:53 -返回值 : null
2020-04-13 14:22:57 -请求地址 : http://localhost:8888/activiti/process/resource/read/xml/process:1:145004
2020-04-13 14:22:57 -HTTP METHOD : GET
2020-04-13 14:22:57 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.resourceRead
2020-04-13 14:22:57 -参数 : [xml, process:1:145004, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2673d1c7]
2020-04-13 14:22:57 -耗时 : 4
2020-04-13 14:22:57 -返回值 : null
2020-04-13 14:23:08 -请求地址 : http://localhost:8888/common/dict
2020-04-13 14:23:08 -HTTP METHOD : GET
2020-04-13 14:23:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2020-04-13 14:23:08 -参数 : []
2020-04-13 14:23:08 -耗时 : 0
2020-04-13 14:23:08 -返回值 : common/dict/dict
2020-04-13 14:23:08 -请求地址 : http://localhost:8888/common/dict/type
2020-04-13 14:23:08 -HTTP METHOD : GET
2020-04-13 14:23:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2020-04-13 14:23:08 -参数 : []
2020-04-13 14:23:08 -==>  Preparing: select distinct `type` , description from sys_dict 
2020-04-13 14:23:08 -==> Parameters: 
2020-04-13 14:23:08 -<==      Total: 31
2020-04-13 14:23:08 -耗时 : 10
2020-04-13 14:23:08 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2020-04-13 14:23:08 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:08 -HTTP METHOD : GET
2020-04-13 14:23:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:08 -参数 : [{limit=10, offset=0}]
2020-04-13 14:23:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:08 -==> Parameters: 0(Integer), 10(Integer)
2020-04-13 14:23:08 -<==      Total: 10
2020-04-13 14:23:08 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:08 -==> Parameters: 
2020-04-13 14:23:08 -<==      Total: 1
2020-04-13 14:23:08 -耗时 : 8
2020-04-13 14:23:08 -返回值 : com.bootdo.common.utils.PageUtils@39210350
2020-04-13 14:23:24 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:24 -HTTP METHOD : GET
2020-04-13 14:23:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:24 -参数 : [{limit=10, offset=10}]
2020-04-13 14:23:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:24 -==> Parameters: 10(Integer), 10(Integer)
2020-04-13 14:23:24 -<==      Total: 10
2020-04-13 14:23:24 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:24 -==> Parameters: 
2020-04-13 14:23:24 -<==      Total: 1
2020-04-13 14:23:24 -耗时 : 8
2020-04-13 14:23:24 -返回值 : com.bootdo.common.utils.PageUtils@3d2cacef
2020-04-13 14:23:25 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:25 -HTTP METHOD : GET
2020-04-13 14:23:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:25 -参数 : [{limit=10, offset=20}]
2020-04-13 14:23:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:25 -==> Parameters: 20(Integer), 10(Integer)
2020-04-13 14:23:25 -<==      Total: 10
2020-04-13 14:23:25 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:25 -==> Parameters: 
2020-04-13 14:23:25 -<==      Total: 1
2020-04-13 14:23:25 -耗时 : 11
2020-04-13 14:23:25 -返回值 : com.bootdo.common.utils.PageUtils@ff38a4
2020-04-13 14:23:26 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:26 -HTTP METHOD : GET
2020-04-13 14:23:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:26 -参数 : [{limit=10, offset=30}]
2020-04-13 14:23:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:26 -==> Parameters: 30(Integer), 10(Integer)
2020-04-13 14:23:26 -<==      Total: 10
2020-04-13 14:23:26 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:26 -==> Parameters: 
2020-04-13 14:23:26 -<==      Total: 1
2020-04-13 14:23:26 -耗时 : 7
2020-04-13 14:23:26 -返回值 : com.bootdo.common.utils.PageUtils@741836b9
2020-04-13 14:23:27 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:27 -HTTP METHOD : GET
2020-04-13 14:23:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:27 -参数 : [{limit=10, offset=40}]
2020-04-13 14:23:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:27 -==> Parameters: 40(Integer), 10(Integer)
2020-04-13 14:23:27 -<==      Total: 10
2020-04-13 14:23:27 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:27 -==> Parameters: 
2020-04-13 14:23:27 -<==      Total: 1
2020-04-13 14:23:27 -耗时 : 7
2020-04-13 14:23:27 -返回值 : com.bootdo.common.utils.PageUtils@d52268a
2020-04-13 14:23:29 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:29 -HTTP METHOD : GET
2020-04-13 14:23:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:29 -参数 : [{limit=10, offset=30}]
2020-04-13 14:23:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:29 -==> Parameters: 30(Integer), 10(Integer)
2020-04-13 14:23:29 -<==      Total: 10
2020-04-13 14:23:29 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:29 -==> Parameters: 
2020-04-13 14:23:29 -<==      Total: 1
2020-04-13 14:23:29 -耗时 : 5
2020-04-13 14:23:29 -返回值 : com.bootdo.common.utils.PageUtils@68f8ed96
2020-04-13 14:23:41 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:41 -HTTP METHOD : GET
2020-04-13 14:23:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:41 -参数 : [{limit=10, offset=40}]
2020-04-13 14:23:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:41 -==> Parameters: 40(Integer), 10(Integer)
2020-04-13 14:23:41 -<==      Total: 10
2020-04-13 14:23:41 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:41 -==> Parameters: 
2020-04-13 14:23:41 -<==      Total: 1
2020-04-13 14:23:41 -耗时 : 13
2020-04-13 14:23:41 -返回值 : com.bootdo.common.utils.PageUtils@943263
2020-04-13 14:23:44 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:44 -HTTP METHOD : GET
2020-04-13 14:23:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:44 -参数 : [{limit=10, offset=50}]
2020-04-13 14:23:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:44 -==> Parameters: 50(Integer), 10(Integer)
2020-04-13 14:23:44 -<==      Total: 10
2020-04-13 14:23:44 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:44 -==> Parameters: 
2020-04-13 14:23:44 -<==      Total: 1
2020-04-13 14:23:44 -耗时 : 4
2020-04-13 14:23:44 -返回值 : com.bootdo.common.utils.PageUtils@30c2bfce
2020-04-13 14:23:45 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:45 -HTTP METHOD : GET
2020-04-13 14:23:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:45 -参数 : [{limit=10, offset=60}]
2020-04-13 14:23:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:45 -==> Parameters: 60(Integer), 10(Integer)
2020-04-13 14:23:45 -<==      Total: 10
2020-04-13 14:23:45 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:45 -==> Parameters: 
2020-04-13 14:23:45 -<==      Total: 1
2020-04-13 14:23:45 -耗时 : 5
2020-04-13 14:23:45 -返回值 : com.bootdo.common.utils.PageUtils@4312b2c3
2020-04-13 14:23:45 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:45 -HTTP METHOD : GET
2020-04-13 14:23:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:45 -参数 : [{limit=10, offset=70}]
2020-04-13 14:23:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:45 -==> Parameters: 70(Integer), 10(Integer)
2020-04-13 14:23:45 -<==      Total: 10
2020-04-13 14:23:45 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:45 -==> Parameters: 
2020-04-13 14:23:45 -<==      Total: 1
2020-04-13 14:23:45 -耗时 : 8
2020-04-13 14:23:45 -返回值 : com.bootdo.common.utils.PageUtils@57f1a78b
2020-04-13 14:23:45 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:45 -HTTP METHOD : GET
2020-04-13 14:23:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:45 -参数 : [{limit=10, offset=80}]
2020-04-13 14:23:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:45 -==> Parameters: 80(Integer), 10(Integer)
2020-04-13 14:23:45 -<==      Total: 10
2020-04-13 14:23:45 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:45 -==> Parameters: 
2020-04-13 14:23:45 -<==      Total: 1
2020-04-13 14:23:45 -耗时 : 5
2020-04-13 14:23:45 -返回值 : com.bootdo.common.utils.PageUtils@2bc10332
2020-04-13 14:23:46 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:46 -HTTP METHOD : GET
2020-04-13 14:23:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:46 -参数 : [{limit=10, offset=90}]
2020-04-13 14:23:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:46 -==> Parameters: 90(Integer), 10(Integer)
2020-04-13 14:23:46 -<==      Total: 10
2020-04-13 14:23:46 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:46 -==> Parameters: 
2020-04-13 14:23:46 -<==      Total: 1
2020-04-13 14:23:46 -耗时 : 3
2020-04-13 14:23:46 -返回值 : com.bootdo.common.utils.PageUtils@5bdc6d4c
2020-04-13 14:23:46 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:46 -HTTP METHOD : GET
2020-04-13 14:23:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:46 -参数 : [{limit=10, offset=100}]
2020-04-13 14:23:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:46 -==> Parameters: 100(Integer), 10(Integer)
2020-04-13 14:23:46 -<==      Total: 10
2020-04-13 14:23:46 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:46 -==> Parameters: 
2020-04-13 14:23:46 -<==      Total: 1
2020-04-13 14:23:46 -耗时 : 3
2020-04-13 14:23:46 -返回值 : com.bootdo.common.utils.PageUtils@3f2f79db
2020-04-13 14:23:46 -请求地址 : http://localhost:8888/common/dict/list
2020-04-13 14:23:46 -HTTP METHOD : GET
2020-04-13 14:23:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2020-04-13 14:23:46 -参数 : [{limit=10, offset=110}]
2020-04-13 14:23:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2020-04-13 14:23:46 -==> Parameters: 110(Integer), 10(Integer)
2020-04-13 14:23:46 -<==      Total: 4
2020-04-13 14:23:46 -==>  Preparing: select count(*) from sys_dict 
2020-04-13 14:23:46 -==> Parameters: 
2020-04-13 14:23:46 -<==      Total: 1
2020-04-13 14:23:46 -耗时 : 5
2020-04-13 14:23:46 -返回值 : com.bootdo.common.utils.PageUtils@7eae3d8
2020-04-13 14:23:54 -请求地址 : http://localhost:8888/common/generator
2020-04-13 14:23:54 -HTTP METHOD : GET
2020-04-13 14:23:54 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2020-04-13 14:23:54 -参数 : []
2020-04-13 14:23:54 -耗时 : 0
2020-04-13 14:23:54 -返回值 : common/generator/list
2020-04-13 14:23:54 -请求地址 : http://localhost:8888/common/generator/list
2020-04-13 14:23:54 -HTTP METHOD : GET
2020-04-13 14:23:54 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2020-04-13 14:23:54 -参数 : []
2020-04-13 14:23:54 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2020-04-13 14:23:54 -==> Parameters: 
2020-04-13 14:23:54 -<==      Total: 41
2020-04-13 14:23:54 -耗时 : 42
2020-04-13 14:23:54 -返回值 : [{engine=InnoDB, createTime=2018-09-25 14:48:54.0, tableComment=, tableName=act_evt_log}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_ge_bytearray}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_ge_property}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_hi_actinst}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_hi_attachment}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_hi_comment}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_hi_detail}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_hi_identitylink}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_hi_procinst}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_hi_taskinst}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_hi_varinst}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_id_group}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_id_info}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_id_membership}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_id_user}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_procdef_info}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_re_deployment}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_re_model}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_re_procdef}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_ru_event_subscr}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_ru_execution}, {engine=InnoDB, createTime=2018-09-25 14:48:55.0, tableComment=, tableName=act_ru_identitylink}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=, tableName=act_ru_job}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=, tableName=act_ru_task}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=, tableName=act_ru_variable}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=文章内容, tableName=blog_content}, {engine=InnoDB, createTime=2018-10-18 13:44:35.0, tableComment=, tableName=frequent_contact}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=通知通告, tableName=oa_notify}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=通知通告发送记录, tableName=oa_notify_record}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=审批流程测试表, tableName=salary}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=字典表, tableName=sys_dict}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=文件上传, tableName=sys_file}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=菜单管理, tableName=sys_menu}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=角色, tableName=sys_role}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=角色与菜单对应关系, tableName=sys_role_menu}, {engine=MyISAM, createTime=2018-09-25 14:48:56.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=, tableName=sys_user_plus}, {engine=InnoDB, createTime=2018-09-25 14:48:56.0, tableComment=用户与角色对应关系, tableName=sys_user_role}]
2020-04-13 14:23:58 -请求地址 : http://localhost:8888/common/generator/code/act_evt_log
2020-04-13 14:23:58 -HTTP METHOD : GET
2020-04-13 14:23:58 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.code
2020-04-13 14:23:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ff908b3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4d4845e0, act_evt_log]
2020-04-13 14:23:58 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) and table_name = ? 
2020-04-13 14:23:58 -==> Parameters: act_evt_log(String)
2020-04-13 14:23:58 -<==      Total: 1
2020-04-13 14:23:58 -==>  Preparing: select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra from information_schema.columns where table_name = ? and table_schema = (select database()) order by ordinal_position 
2020-04-13 14:23:58 -==> Parameters: act_evt_log(String)
2020-04-13 14:23:58 -<==      Total: 12
2020-04-13 14:23:59 -耗时 : 413
2020-04-13 14:23:59 -返回值 : null
2020-04-13 14:24:13 -请求地址 : http://localhost:8888/common/job
2020-04-13 14:24:13 -HTTP METHOD : GET
2020-04-13 14:24:13 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2020-04-13 14:24:13 -参数 : []
2020-04-13 14:24:13 -耗时 : 0
2020-04-13 14:24:13 -返回值 : common/job/job
2020-04-13 14:24:13 -请求地址 : http://localhost:8888/common/job/list
2020-04-13 14:24:13 -HTTP METHOD : GET
2020-04-13 14:24:13 -CLASS_METHOD : com.bootdo.common.controller.JobController.list
2020-04-13 14:24:13 -参数 : [{limit=10, offset=0}]
2020-04-13 14:24:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2020-04-13 14:24:13 -==> Parameters: 0(Integer), 10(Integer)
2020-04-13 14:24:13 -<==      Total: 2
2020-04-13 14:24:13 -==>  Preparing: select count(*) from sys_task 
2020-04-13 14:24:13 -==> Parameters: 
2020-04-13 14:24:13 -<==      Total: 1
2020-04-13 14:24:13 -耗时 : 8
2020-04-13 14:24:13 -返回值 : com.bootdo.common.utils.PageUtils@237566bf
2020-04-13 14:24:20 -请求地址 : http://localhost:8888/common/job/changeJobStatus
2020-04-13 14:24:20 -HTTP METHOD : POST
2020-04-13 14:24:20 -CLASS_METHOD : com.bootdo.common.controller.JobController.changeJobStatus
2020-04-13 14:24:20 -参数 : [2, start]
2020-04-13 14:24:20 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task where id = ? 
2020-04-13 14:24:20 -==> Parameters: 2(Long)
2020-04-13 14:24:20 -<==      Total: 1
2020-04-13 14:24:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-13 14:24:20 -==>  Preparing: update sys_task SET `cron_expression` = ?, `method_name` = ?, `is_concurrent` = ?, `description` = ?, `update_by` = ?, `bean_class` = ?, `create_date` = ?, `job_status` = ?, `job_group` = ?, `update_date` = ?, `spring_bean` = ?, `job_name` = ? where id = ? 
2020-04-13 14:24:20 -==> Parameters: 0/10 * * * * ?(String), run1(String), 1(String), (String), 4028ea815a3d2a8c015a3d2f8d2a0002(String), com.bootdo.common.task.WelcomeJob(String), 2017-05-19 18:30:56.0(Timestamp), 1(String), group1(String), 2017-05-19 18:31:07.0(Timestamp), (String), welcomJob(String), 2(Long)
2020-04-13 14:24:20 -<==    Updates: 1
2020-04-13 14:24:20 -耗时 : 21
2020-04-13 14:24:20 -返回值 : {msg=任务启动成功, code=0}
2020-04-13 14:24:20 -请求地址 : http://localhost:8888/common/job/list
2020-04-13 14:24:20 -HTTP METHOD : GET
2020-04-13 14:24:20 -CLASS_METHOD : com.bootdo.common.controller.JobController.list
2020-04-13 14:24:20 -参数 : [{limit=10, offset=0}]
2020-04-13 14:24:20 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2020-04-13 14:24:20 -==> Parameters: 0(Integer), 10(Integer)
2020-04-13 14:24:20 -<==      Total: 2
2020-04-13 14:24:20 -==>  Preparing: select count(*) from sys_task 
2020-04-13 14:24:20 -==> Parameters: 
2020-04-13 14:24:20 -<==      Total: 1
2020-04-13 14:24:20 -耗时 : 5
2020-04-13 14:24:20 -返回值 : com.bootdo.common.utils.PageUtils@6a1dec08
2020-04-13 14:24:33 -请求地址 : http://localhost:8888/common/job/changeJobStatus
2020-04-13 14:24:33 -HTTP METHOD : POST
2020-04-13 14:24:33 -CLASS_METHOD : com.bootdo.common.controller.JobController.changeJobStatus
2020-04-13 14:24:33 -参数 : [2, stop]
2020-04-13 14:24:33 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task where id = ? 
2020-04-13 14:24:33 -==> Parameters: 2(Long)
2020-04-13 14:24:33 -<==      Total: 1
2020-04-13 14:24:33 -==>  Preparing: update sys_task SET `cron_expression` = ?, `method_name` = ?, `is_concurrent` = ?, `description` = ?, `update_by` = ?, `bean_class` = ?, `create_date` = ?, `job_status` = ?, `job_group` = ?, `update_date` = ?, `spring_bean` = ?, `job_name` = ? where id = ? 
2020-04-13 14:24:33 -==> Parameters: 0/10 * * * * ?(String), run1(String), 1(String), (String), 4028ea815a3d2a8c015a3d2f8d2a0002(String), com.bootdo.common.task.WelcomeJob(String), 2017-05-19 18:30:56.0(Timestamp), 0(String), group1(String), 2017-05-19 18:31:07.0(Timestamp), (String), welcomJob(String), 2(Long)
2020-04-13 14:24:33 -<==    Updates: 1
2020-04-13 14:24:33 -耗时 : 4
2020-04-13 14:24:33 -返回值 : {msg=任务停止成功, code=0}
2020-04-13 14:24:33 -请求地址 : http://localhost:8888/common/job/list
2020-04-13 14:24:33 -HTTP METHOD : GET
2020-04-13 14:24:33 -CLASS_METHOD : com.bootdo.common.controller.JobController.list
2020-04-13 14:24:33 -参数 : [{limit=10, offset=0}]
2020-04-13 14:24:33 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2020-04-13 14:24:33 -==> Parameters: 0(Integer), 10(Integer)
2020-04-13 14:24:33 -<==      Total: 2
2020-04-13 14:24:33 -==>  Preparing: select count(*) from sys_task 
2020-04-13 14:24:33 -==> Parameters: 
2020-04-13 14:24:33 -<==      Total: 1
2020-04-13 14:24:33 -耗时 : 2
2020-04-13 14:24:33 -返回值 : com.bootdo.common.utils.PageUtils@3e4c846f
2020-04-13 14:24:55 -请求地址 : http://localhost:8888/index
2020-04-13 14:24:55 -HTTP METHOD : GET
2020-04-13 14:24:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2020-04-13 14:24:55 -参数 : [{}]
2020-04-13 14:24:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2020-04-13 14:24:55 -==> Parameters: 1(Long)
2020-04-13 14:24:55 -<==      Total: 28
2020-04-13 14:24:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2020-04-13 14:24:55 -==> Parameters: 145(Long)
2020-04-13 14:24:55 -<==      Total: 1
2020-04-13 14:24:55 -耗时 : 8
2020-04-13 14:24:55 -返回值 : index_v1
2020-04-13 14:24:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-04-13 14:24:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 8(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2020-04-13 14:24:55.981(Timestamp)
2020-04-13 14:24:55 -<==    Updates: 1
2020-04-13 14:24:56 -请求地址 : http://localhost:8888/main
2020-04-13 14:24:56 -HTTP METHOD : GET
2020-04-13 14:24:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-04-13 14:24:56 -参数 : []
2020-04-13 14:24:56 -耗时 : 1
2020-04-13 14:24:56 -返回值 : main
2020-04-13 14:24:56 -请求地址 : http://localhost:8888/oa/notify/message
2020-04-13 14:24:56 -HTTP METHOD : GET
2020-04-13 14:24:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2020-04-13 14:24:56 -参数 : []
2020-04-13 14:24:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2020-04-13 14:24:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2020-04-13 14:24:56 -<==      Total: 1
2020-04-13 14:24:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-13 14:24:56 -==> Parameters: 1(Long)
2020-04-13 14:24:56 -<==      Total: 1
2020-04-13 14:24:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2020-04-13 14:24:56 -==> Parameters: 1(Long), 0(String)
2020-04-13 14:24:56 -<==      Total: 1
2020-04-13 14:24:56 -耗时 : 6
2020-04-13 14:24:56 -返回值 : com.bootdo.common.utils.PageUtils@2dbfde7c
2020-04-13 14:24:56 -请求地址 : http://localhost:8888/main
2020-04-13 14:24:56 -HTTP METHOD : GET
2020-04-13 14:24:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-04-13 14:24:56 -参数 : []
2020-04-13 14:24:56 -耗时 : 0
2020-04-13 14:24:56 -返回值 : main
2020-04-13 14:25:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2020-04-13 14:25:19 -==> Parameters: 1(Long)
2020-04-13 14:25:19 -<==      Total: 47
2020-04-13 14:25:19 -请求地址 : http://localhost:8888/blog/bContent
2020-04-13 14:25:19 -HTTP METHOD : GET
2020-04-13 14:25:19 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.bContent
2020-04-13 14:25:19 -参数 : []
2020-04-13 14:25:19 -耗时 : 0
2020-04-13 14:25:19 -返回值 : blog/bContent/bContent
2020-04-13 14:25:19 -请求地址 : http://localhost:8888/blog/bContent/list
2020-04-13 14:25:19 -HTTP METHOD : GET
2020-04-13 14:25:19 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.list
2020-04-13 14:25:19 -参数 : [{limit=10, offset=0}]
2020-04-13 14:25:19 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content order by cid desc limit 0, 10 
2020-04-13 14:25:19 -==> Parameters: 
2020-04-13 14:25:19 -<==      Total: 10
2020-04-13 14:25:19 -==>  Preparing: select count(*) from blog_content 
2020-04-13 14:25:19 -==> Parameters: 
2020-04-13 14:25:19 -<==      Total: 1
2020-04-13 14:25:19 -耗时 : 9
2020-04-13 14:25:19 -返回值 : com.bootdo.common.utils.PageUtils@422dd264
2020-04-13 14:25:27 -请求地址 : http://localhost:8888/blog/bContent/list
2020-04-13 14:25:27 -HTTP METHOD : GET
2020-04-13 14:25:27 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.list
2020-04-13 14:25:27 -参数 : [{limit=10, offset=10}]
2020-04-13 14:25:27 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content order by cid desc limit 10, 10 
2020-04-13 14:25:27 -==> Parameters: 
2020-04-13 14:25:27 -<==      Total: 3
2020-04-13 14:25:27 -==>  Preparing: select count(*) from blog_content 
2020-04-13 14:25:27 -==> Parameters: 
2020-04-13 14:25:27 -<==      Total: 1
2020-04-13 14:25:27 -耗时 : 9
2020-04-13 14:25:27 -返回值 : com.bootdo.common.utils.PageUtils@714b5cb4
2020-04-13 14:25:31 -请求地址 : http://localhost:8888/blog/open/post/75
2020-04-13 14:25:31 -HTTP METHOD : GET
2020-04-13 14:25:31 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.post
2020-04-13 14:25:31 -参数 : [75, {}]
2020-04-13 14:25:31 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content where cid = ? 
2020-04-13 14:25:31 -==> Parameters: 75(Long)
2020-04-13 14:25:31 -<==      Total: 1
2020-04-13 14:25:31 -耗时 : 3
2020-04-13 14:25:31 -返回值 : blog/index/post
2020-04-13 14:25:41 -请求地址 : http://localhost:8888/blog/open/post/100
2020-04-13 14:25:41 -HTTP METHOD : GET
2020-04-13 14:25:41 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.post
2020-04-13 14:25:41 -参数 : [100, {}]
2020-04-13 14:25:41 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content where cid = ? 
2020-04-13 14:25:41 -==> Parameters: 100(Long)
2020-04-13 14:25:41 -<==      Total: 1
2020-04-13 14:25:41 -耗时 : 3
2020-04-13 14:25:41 -返回值 : blog/index/post
2020-04-13 14:29:24 -Validating all active sessions...
2020-04-13 14:29:24 -Finished session validation.  No sessions were stopped.
2020-04-13 14:30:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 120]
2020-04-13 14:39:56 -Starting BootdoApplicationTests on PC201808081633 with PID 8180 (started by Administrator in C:\MyWorks\IDEA2017WorkSpace01\bootdo)
2020-04-13 14:39:56 -Running with Spring Boot v2.0.5.RELEASE, Spring v5.0.9.RELEASE
2020-04-13 14:39:56 -The following profiles are active: dev
2020-04-13 14:39:56 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@37052337: startup date [Mon Apr 13 14:39:56 CST 2020]; root of context hierarchy
2020-04-13 14:39:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-13 14:39:58 -Overriding bean definition for bean 'goodsRepository' with a different definition: replacing [Generic bean: class [org.mybatis.spring.mapper.MapperFactoryBean]; scope=singleton; abstract=false; lazyInit=false; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\MyWorks\IDEA2017WorkSpace01\bootdo\target\classes\com\bootdo\brave\dao\GoodsRepository.class]] with [Root bean: class [org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-13 14:39:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-13 14:39:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo.brave.dao.GoodsRepository.
2020-04-13 14:40:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67399c1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5992cac6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:00 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/Administrator/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2020-04-13 14:40:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2020-04-13 14:40:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2020-04-13 14:40:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:40:01 -{dataSource-1} inited
2020-04-13 14:40:04 -ProcessEngine default created
2020-04-13 14:40:06 -no modules loaded
2020-04-13 14:40:06 -loaded plugin [org.elasticsearch.index.reindex.ReindexPlugin]
2020-04-13 14:40:06 -loaded plugin [org.elasticsearch.join.ParentJoinPlugin]
2020-04-13 14:40:06 -loaded plugin [org.elasticsearch.percolator.PercolatorPlugin]
2020-04-13 14:40:06 -loaded plugin [org.elasticsearch.script.mustache.MustachePlugin]
2020-04-13 14:40:06 -loaded plugin [org.elasticsearch.transport.Netty4Plugin]
2020-04-13 14:40:08 -Adding transport node : 192.168.8.54:9300
2020-04-13 14:40:30 -failed to load elasticsearch nodes : org.elasticsearch.client.transport.NoNodeAvailableException: None of the configured nodes are available: [{#transport#-1}{vMHmc4K9SAqTUJIgnf5T0A}{192.168.8.54}{192.168.8.54:9300}]
2020-04-13 14:40:30 -ApplicationContext registed-->org.springframework.web.context.support.GenericWebApplicationContext@37052337: startup date [Mon Apr 13 14:39:56 CST 2020]; root of context hierarchy
2020-04-13 14:40:30 -Using default implementation for ThreadExecutor
2020-04-13 14:40:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-13 14:40:30 -Quartz Scheduler v.2.2.1 created.
2020-04-13 14:40:30 -RAMJobStore initialized.
2020-04-13 14:40:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-13 14:40:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-13 14:40:30 -Quartz scheduler version: 2.2.1
2020-04-13 14:40:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@951461a
2020-04-13 14:40:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2020-04-13 14:40:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2020-04-13 14:40:32 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2020-04-13 14:40:32 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2020-04-13 14:40:32 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2020-04-13 14:40:32 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-04-13 14:40:32 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2020-04-13 14:40:32 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2020-04-13 14:40:32 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2020-04-13 14:40:32 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2020-04-13 14:40:32 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2020-04-13 14:40:32 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2020-04-13 14:40:32 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2020-04-13 14:40:32 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2020-04-13 14:40:32 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-04-13 14:40:32 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2020-04-13 14:40:32 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2020-04-13 14:40:32 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2020-04-13 14:40:32 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2020-04-13 14:40:32 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2020-04-13 14:40:32 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2020-04-13 14:40:32 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-04-13 14:40:32 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2020-04-13 14:40:32 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2020-04-13 14:40:32 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-04-13 14:40:32 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2020-04-13 14:40:32 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2020-04-13 14:40:32 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-04-13 14:40:32 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2020-04-13 14:40:32 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2020-04-13 14:40:32 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2020-04-13 14:40:32 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2020-04-13 14:40:32 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2020-04-13 14:40:32 -Mapped "{[/save],methods=[GET]}" onto public java.lang.String com.bootdo.brave.controller.GoodsController.save()
2020-04-13 14:40:32 -Mapped "{[/hello]}" onto public java.lang.String com.bootdo.brave.controller.HelloController.index()
2020-04-13 14:40:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2020-04-13 14:40:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2020-04-13 14:40:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2020-04-13 14:40:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2020-04-13 14:40:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2020-04-13 14:40:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-04-13 14:40:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2020-04-13 14:40:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-04-13 14:40:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2020-04-13 14:40:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-04-13 14:40:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2020-04-13 14:40:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2020-04-13 14:40:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2020-04-13 14:40:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2020-04-13 14:40:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2020-04-13 14:40:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 14:40:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 14:40:32 -Mapped "{[/frequent/list],methods=[GET]}" onto public java.lang.String com.bootdo.frequent.controller.FrequentContactController.list()
2020-04-13 14:40:32 -Mapped "{[/frequent/query],methods=[GET]}" onto public com.bootdo.frequent.domain.FrequentContact com.bootdo.frequent.controller.FrequentContactController.selectById()
2020-04-13 14:40:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2020-04-13 14:40:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2020-04-13 14:40:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2020-04-13 14:40:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2020-04-13 14:40:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2020-04-13 14:40:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2020-04-13 14:40:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2020-04-13 14:40:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2020-04-13 14:40:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2020-04-13 14:40:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2020-04-13 14:40:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2020-04-13 14:40:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2020-04-13 14:40:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2020-04-13 14:40:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2020-04-13 14:40:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2020-04-13 14:40:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2020-04-13 14:40:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2020-04-13 14:40:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2020-04-13 14:40:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2020-04-13 14:40:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2020-04-13 14:40:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list(javax.servlet.http.HttpServletRequest)
2020-04-13 14:40:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-04-13 14:40:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2020-04-13 14:40:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2020-04-13 14:40:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2020-04-13 14:40:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:40:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2020-04-13 14:40:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2020-04-13 14:40:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2020-04-13 14:40:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2020-04-13 14:40:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2020-04-13 14:40:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2020-04-13 14:40:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2020-04-13 14:40:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2020-04-13 14:40:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2020-04-13 14:40:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-04-13 14:40:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-04-13 14:40:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-04-13 14:40:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-04-13 14:40:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-04-13 14:40:36 -Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-13 14:40:36 -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-04-13 14:40:36 -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-04-13 14:40:36 -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 14:40:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2020-04-13 14:40:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2020-04-13 14:40:37 -Initializing ExecutorService  'brokerChannelExecutor'
2020-04-13 14:40:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 14:40:39 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@37052337: startup date [Mon Apr 13 14:39:56 CST 2020]; root of context hierarchy
2020-04-13 14:40:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 14:40:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 14:40:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 14:40:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2020-04-13 14:40:39 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2020-04-13 14:40:42 -Starting beans in phase 2147483647
2020-04-13 14:40:42 -Context refreshed
2020-04-13 14:40:42 -Found 1 custom documentation plugin(s)
2020-04-13 14:40:43 -Scanning for api listing references
2020-04-13 14:40:43 -Generating unique operation named: removeUsingPOST_1
2020-04-13 14:40:43 -Generating unique operation named: addUsingGET_1
2020-04-13 14:40:43 -Generating unique operation named: editUsingGET_1
2020-04-13 14:40:43 -Generating unique operation named: listUsingGET_1
2020-04-13 14:40:43 -Generating unique operation named: removeUsingPOST_2
2020-04-13 14:40:43 -Generating unique operation named: removeUsingPOST_3
2020-04-13 14:40:43 -Generating unique operation named: saveUsingPOST_1
2020-04-13 14:40:43 -Generating unique operation named: updateUsingGET_1
2020-04-13 14:40:43 -Generating unique operation named: updateUsingHEAD_1
2020-04-13 14:40:43 -Generating unique operation named: updateUsingPOST_1
2020-04-13 14:40:43 -Generating unique operation named: updateUsingPUT_1
2020-04-13 14:40:43 -Generating unique operation named: updateUsingPATCH_1
2020-04-13 14:40:44 -Generating unique operation named: updateUsingDELETE_1
2020-04-13 14:40:44 -Generating unique operation named: updateUsingOPTIONS_1
2020-04-13 14:40:44 -Generating unique operation named: updateUsingTRACE_1
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_2
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_2
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_2
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_4
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_5
2020-04-13 14:40:44 -Generating unique operation named: saveUsingPOST_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingGET_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingHEAD_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPOST_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPUT_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPATCH_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingDELETE_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingOPTIONS_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingTRACE_2
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_3
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_3
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_3
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_6
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_7
2020-04-13 14:40:44 -Generating unique operation named: saveUsingPOST_3
2020-04-13 14:40:44 -Generating unique operation named: updateUsingGET_3
2020-04-13 14:40:44 -Generating unique operation named: updateUsingHEAD_3
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPOST_3
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPUT_3
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPATCH_3
2020-04-13 14:40:44 -Generating unique operation named: updateUsingDELETE_3
2020-04-13 14:40:44 -Generating unique operation named: updateUsingOPTIONS_3
2020-04-13 14:40:44 -Generating unique operation named: updateUsingTRACE_3
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_4
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_4
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_5
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPOST_4
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_4
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_5
2020-04-13 14:40:44 -Generating unique operation named: infoUsingGET_1
2020-04-13 14:40:44 -Generating unique operation named: infoUsingHEAD_1
2020-04-13 14:40:44 -Generating unique operation named: infoUsingPOST_1
2020-04-13 14:40:44 -Generating unique operation named: infoUsingPUT_1
2020-04-13 14:40:44 -Generating unique operation named: infoUsingPATCH_1
2020-04-13 14:40:44 -Generating unique operation named: infoUsingDELETE_1
2020-04-13 14:40:44 -Generating unique operation named: infoUsingOPTIONS_1
2020-04-13 14:40:44 -Generating unique operation named: infoUsingTRACE_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_6
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_8
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_9
2020-04-13 14:40:44 -Generating unique operation named: saveUsingPOST_4
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPOST_5
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_7
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_10
2020-04-13 14:40:44 -Generating unique operation named: indexUsingGET_1
2020-04-13 14:40:44 -Generating unique operation named: welcomeUsingGET_1
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_5
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_6
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_8
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_11
2020-04-13 14:40:44 -Generating unique operation named: saveUsingPOST_5
2020-04-13 14:40:44 -Generating unique operation named: treeUsingGET_1
2020-04-13 14:40:44 -Generating unique operation named: treeUsingGET_2
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPOST_6
2020-04-13 14:40:44 -Generating unique operation named: batchRemoveUsingPOST_1
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_7
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_9
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_6
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_8
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_10
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_12
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_13
2020-04-13 14:40:44 -Generating unique operation named: saveUsingPOST_6
2020-04-13 14:40:44 -Generating unique operation named: updateUsingGET_4
2020-04-13 14:40:44 -Generating unique operation named: updateUsingHEAD_4
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPOST_7
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPUT_4
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPATCH_4
2020-04-13 14:40:44 -Generating unique operation named: updateUsingDELETE_4
2020-04-13 14:40:44 -Generating unique operation named: updateUsingOPTIONS_4
2020-04-13 14:40:44 -Generating unique operation named: updateUsingTRACE_4
2020-04-13 14:40:44 -Generating unique operation named: handleUsingGET_1
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_7
2020-04-13 14:40:44 -Generating unique operation named: batchRemoveUsingPOST_2
2020-04-13 14:40:44 -Generating unique operation named: deployUsingPOST_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_11
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_14
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_8
2020-04-13 14:40:44 -Generating unique operation named: batchRemoveUsingPOST_3
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_9
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_12
2020-04-13 14:40:44 -Generating unique operation named: saveUsingPOST_7
2020-04-13 14:40:44 -Generating unique operation named: saveUsingPOST_8
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPOST_8
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_9
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_10
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_13
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_15
2020-04-13 14:40:44 -Generating unique operation named: removeUsingPOST_16
2020-04-13 14:40:44 -Generating unique operation named: updateUsingGET_5
2020-04-13 14:40:44 -Generating unique operation named: updateUsingHEAD_5
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPOST_9
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPUT_5
2020-04-13 14:40:44 -Generating unique operation named: updateUsingPATCH_5
2020-04-13 14:40:44 -Generating unique operation named: updateUsingDELETE_5
2020-04-13 14:40:44 -Generating unique operation named: updateUsingOPTIONS_5
2020-04-13 14:40:44 -Generating unique operation named: updateUsingTRACE_5
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_14
2020-04-13 14:40:44 -Generating unique operation named: listUsingHEAD_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingPOST_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingPUT_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingPATCH_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingDELETE_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingOPTIONS_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingTRACE_1
2020-04-13 14:40:44 -Generating unique operation named: listUsingGET_15
2020-04-13 14:40:44 -Generating unique operation named: addUsingGET_10
2020-04-13 14:40:44 -Generating unique operation named: batchRemoveUsingPOST_4
2020-04-13 14:40:44 -Generating unique operation named: editUsingGET_11
2020-04-13 14:40:45 -Generating unique operation named: listUsingGET_16
2020-04-13 14:40:45 -Generating unique operation named: removeUsingPOST_17
2020-04-13 14:40:45 -Generating unique operation named: saveUsingPOST_9
2020-04-13 14:40:45 -Generating unique operation named: treeUsingGET_3
2020-04-13 14:40:45 -Generating unique operation named: treeViewUsingGET_1
2020-04-13 14:40:45 -Generating unique operation named: updateUsingPOST_10
2020-04-13 14:40:45 -Starting Quartz Scheduler now
2020-04-13 14:40:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-13 14:40:45 -Starting...
2020-04-13 14:40:45 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-04-13 14:40:45 -Started.
2020-04-13 14:40:45 -Started BootdoApplicationTests in 49.147 seconds (JVM running for 50.255)
2020-04-13 14:40:46 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2020-04-13 14:40:46 -==> Parameters: 
2020-04-13 14:40:46 -<==      Total: 2
2020-04-13 14:40:47 -Closing org.springframework.web.context.support.GenericWebApplicationContext@37052337: startup date [Mon Apr 13 14:39:56 CST 2020]; root of context hierarchy
2020-04-13 14:40:47 -Stopping beans in phase 2147483647
2020-04-13 14:40:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-04-13 14:40:47 -Stopping...
2020-04-13 14:40:47 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-04-13 14:40:47 -Stopped.
2020-04-13 14:40:47 -Shutting down ExecutorService 'brokerChannelExecutor'
2020-04-13 14:40:47 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2020-04-13 14:40:47 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2020-04-13 14:40:47 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2020-04-13 14:40:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-04-13 14:40:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-04-13 14:40:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-04-13 14:40:47 -Shutting down Quartz Scheduler
2020-04-13 14:40:52 -{dataSource-1} closed
2020-04-13 14:48:15 -Starting BootdoApplicationTests on PC201808081633 with PID 10516 (started by Administrator in C:\MyWorks\IDEA2017WorkSpace01\bootdo)
2020-04-13 14:48:15 -Running with Spring Boot v2.0.5.RELEASE, Spring v5.0.9.RELEASE
2020-04-13 14:48:15 -The following profiles are active: dev
2020-04-13 14:48:15 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@424ebba3: startup date [Mon Apr 13 14:48:15 CST 2020]; root of context hierarchy
2020-04-13 14:48:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-13 14:48:19 -Overriding bean definition for bean 'goodsRepository' with a different definition: replacing [Generic bean: class [org.mybatis.spring.mapper.MapperFactoryBean]; scope=singleton; abstract=false; lazyInit=false; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\MyWorks\IDEA2017WorkSpace01\bootdo\target\classes\com\bootdo\brave\dao\GoodsRepository.class]] with [Root bean: class [org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-13 14:48:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-13 14:48:19 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo.brave.dao.GoodsRepository.
2020-04-13 14:48:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c5ea773] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1eb7d61a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:22 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/Administrator/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2020-04-13 14:48:23 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2020-04-13 14:48:23 -diskStorePath 'C:\Users\ADMINI~1\AppData\Local\Temp' is already used by an existing CacheManager either in the same VM or in a different process.
The diskStore path for this CacheManager will be set to C:\Users\ADMINI~1\AppData\Local\Temp\ehcache_auto_created5732810867614809907diskstore.
To avoid this warning consider using the CacheManager factory methods to create a singleton CacheManager or specifying a separate ehcache configuration (ehcache.xml) for each CacheManager instance.
2020-04-13 14:48:23 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2020-04-13 14:48:23 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-13 14:48:24 -{dataSource-1} inited
2020-04-13 14:48:28 -ProcessEngine default created
2020-04-13 14:48:30 -no modules loaded
2020-04-13 14:48:30 -loaded plugin [org.elasticsearch.index.reindex.ReindexPlugin]
2020-04-13 14:48:30 -loaded plugin [org.elasticsearch.join.ParentJoinPlugin]
2020-04-13 14:48:30 -loaded plugin [org.elasticsearch.percolator.PercolatorPlugin]
2020-04-13 14:48:30 -loaded plugin [org.elasticsearch.script.mustache.MustachePlugin]
2020-04-13 14:48:30 -loaded plugin [org.elasticsearch.transport.Netty4Plugin]
2020-04-13 14:48:33 -Adding transport node : 192.168.8.54:9300
2020-04-13 14:48:59 -failed to load elasticsearch nodes : org.elasticsearch.client.transport.NoNodeAvailableException: None of the configured nodes are available: [{#transport#-1}{lSgbKd59TeCQQe1JoxQrMQ}{192.168.8.54}{192.168.8.54:9300}]
2020-04-13 14:49:00 -ApplicationContext registed-->org.springframework.web.context.support.GenericWebApplicationContext@424ebba3: startup date [Mon Apr 13 14:48:15 CST 2020]; root of context hierarchy
2020-04-13 14:49:00 -Using default implementation for ThreadExecutor
2020-04-13 14:49:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-13 14:49:00 -Quartz Scheduler v.2.2.1 created.
2020-04-13 14:49:00 -RAMJobStore initialized.
2020-04-13 14:49:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-13 14:49:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-13 14:49:00 -Quartz scheduler version: 2.2.1
2020-04-13 14:49:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7747571c
2020-04-13 14:49:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2020-04-13 14:49:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2020-04-13 14:49:02 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2020-04-13 14:49:02 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2020-04-13 14:49:02 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2020-04-13 14:49:02 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-04-13 14:49:02 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2020-04-13 14:49:02 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2020-04-13 14:49:02 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2020-04-13 14:49:02 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2020-04-13 14:49:02 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2020-04-13 14:49:02 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2020-04-13 14:49:02 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2020-04-13 14:49:02 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2020-04-13 14:49:02 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-04-13 14:49:02 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2020-04-13 14:49:02 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2020-04-13 14:49:02 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2020-04-13 14:49:02 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2020-04-13 14:49:02 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2020-04-13 14:49:02 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2020-04-13 14:49:02 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-04-13 14:49:02 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2020-04-13 14:49:02 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2020-04-13 14:49:02 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-04-13 14:49:02 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2020-04-13 14:49:02 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2020-04-13 14:49:02 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-04-13 14:49:02 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2020-04-13 14:49:02 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2020-04-13 14:49:02 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2020-04-13 14:49:02 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2020-04-13 14:49:02 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2020-04-13 14:49:02 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2020-04-13 14:49:02 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2020-04-13 14:49:02 -Mapped "{[/save],methods=[GET]}" onto public java.lang.String com.bootdo.brave.controller.GoodsController.save()
2020-04-13 14:49:02 -Mapped "{[/hello]}" onto public java.lang.String com.bootdo.brave.controller.HelloController.index()
2020-04-13 14:49:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2020-04-13 14:49:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2020-04-13 14:49:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2020-04-13 14:49:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2020-04-13 14:49:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2020-04-13 14:49:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2020-04-13 14:49:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2020-04-13 14:49:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-04-13 14:49:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2020-04-13 14:49:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-04-13 14:49:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2020-04-13 14:49:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-04-13 14:49:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2020-04-13 14:49:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2020-04-13 14:49:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2020-04-13 14:49:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2020-04-13 14:49:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2020-04-13 14:49:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2020-04-13 14:49:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2020-04-13 14:49:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2020-04-13 14:49:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2020-04-13 14:49:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2020-04-13 14:49:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2020-04-13 14:49:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 14:49:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 14:49:02 -Mapped "{[/frequent/list],methods=[GET]}" onto public java.lang.String com.bootdo.frequent.controller.FrequentContactController.list()
2020-04-13 14:49:02 -Mapped "{[/frequent/query],methods=[GET]}" onto public com.bootdo.frequent.domain.FrequentContact com.bootdo.frequent.controller.FrequentContactController.selectById()
2020-04-13 14:49:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2020-04-13 14:49:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2020-04-13 14:49:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2020-04-13 14:49:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2020-04-13 14:49:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2020-04-13 14:49:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2020-04-13 14:49:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2020-04-13 14:49:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2020-04-13 14:49:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2020-04-13 14:49:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2020-04-13 14:49:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2020-04-13 14:49:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2020-04-13 14:49:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2020-04-13 14:49:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2020-04-13 14:49:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2020-04-13 14:49:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2020-04-13 14:49:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2020-04-13 14:49:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2020-04-13 14:49:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2020-04-13 14:49:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2020-04-13 14:49:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2020-04-13 14:49:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2020-04-13 14:49:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2020-04-13 14:49:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2020-04-13 14:49:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2020-04-13 14:49:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2020-04-13 14:49:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2020-04-13 14:49:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2020-04-13 14:49:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list(javax.servlet.http.HttpServletRequest)
2020-04-13 14:49:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-04-13 14:49:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2020-04-13 14:49:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2020-04-13 14:49:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2020-04-13 14:49:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2020-04-13 14:49:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-13 14:49:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2020-04-13 14:49:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2020-04-13 14:49:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2020-04-13 14:49:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2020-04-13 14:49:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2020-04-13 14:49:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2020-04-13 14:49:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2020-04-13 14:49:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2020-04-13 14:49:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2020-04-13 14:49:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-04-13 14:49:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-04-13 14:49:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-04-13 14:49:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-04-13 14:49:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-04-13 14:49:04 -Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-13 14:49:04 -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-04-13 14:49:04 -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-04-13 14:49:04 -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-13 14:49:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2020-04-13 14:49:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2020-04-13 14:49:05 -Initializing ExecutorService  'brokerChannelExecutor'
2020-04-13 14:49:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 14:49:06 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@424ebba3: startup date [Mon Apr 13 14:48:15 CST 2020]; root of context hierarchy
2020-04-13 14:49:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 14:49:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 14:49:06 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-13 14:49:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2020-04-13 14:49:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2020-04-13 14:49:08 -Starting beans in phase 2147483647
2020-04-13 14:49:08 -Context refreshed
2020-04-13 14:49:08 -Found 1 custom documentation plugin(s)
2020-04-13 14:49:08 -Scanning for api listing references
2020-04-13 14:49:08 -Generating unique operation named: removeUsingPOST_1
2020-04-13 14:49:08 -Generating unique operation named: addUsingGET_1
2020-04-13 14:49:08 -Generating unique operation named: editUsingGET_1
2020-04-13 14:49:08 -Generating unique operation named: listUsingGET_1
2020-04-13 14:49:08 -Generating unique operation named: removeUsingPOST_2
2020-04-13 14:49:08 -Generating unique operation named: removeUsingPOST_3
2020-04-13 14:49:08 -Generating unique operation named: saveUsingPOST_1
2020-04-13 14:49:08 -Generating unique operation named: updateUsingGET_1
2020-04-13 14:49:08 -Generating unique operation named: updateUsingHEAD_1
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPOST_1
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPUT_1
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPATCH_1
2020-04-13 14:49:08 -Generating unique operation named: updateUsingDELETE_1
2020-04-13 14:49:08 -Generating unique operation named: updateUsingOPTIONS_1
2020-04-13 14:49:08 -Generating unique operation named: updateUsingTRACE_1
2020-04-13 14:49:08 -Generating unique operation named: addUsingGET_2
2020-04-13 14:49:08 -Generating unique operation named: editUsingGET_2
2020-04-13 14:49:08 -Generating unique operation named: listUsingGET_2
2020-04-13 14:49:08 -Generating unique operation named: removeUsingPOST_4
2020-04-13 14:49:08 -Generating unique operation named: removeUsingPOST_5
2020-04-13 14:49:08 -Generating unique operation named: saveUsingPOST_2
2020-04-13 14:49:08 -Generating unique operation named: updateUsingGET_2
2020-04-13 14:49:08 -Generating unique operation named: updateUsingHEAD_2
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPOST_2
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPUT_2
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPATCH_2
2020-04-13 14:49:08 -Generating unique operation named: updateUsingDELETE_2
2020-04-13 14:49:08 -Generating unique operation named: updateUsingOPTIONS_2
2020-04-13 14:49:08 -Generating unique operation named: updateUsingTRACE_2
2020-04-13 14:49:08 -Generating unique operation named: addUsingGET_3
2020-04-13 14:49:08 -Generating unique operation named: editUsingGET_3
2020-04-13 14:49:08 -Generating unique operation named: listUsingGET_3
2020-04-13 14:49:08 -Generating unique operation named: removeUsingPOST_6
2020-04-13 14:49:08 -Generating unique operation named: removeUsingPOST_7
2020-04-13 14:49:08 -Generating unique operation named: saveUsingPOST_3
2020-04-13 14:49:08 -Generating unique operation named: updateUsingGET_3
2020-04-13 14:49:08 -Generating unique operation named: updateUsingHEAD_3
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPOST_3
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPUT_3
2020-04-13 14:49:08 -Generating unique operation named: updateUsingPATCH_3
2020-04-13 14:49:08 -Generating unique operation named: updateUsingDELETE_3
2020-04-13 14:49:08 -Generating unique operation named: updateUsingOPTIONS_3
2020-04-13 14:49:08 -Generating unique operation named: updateUsingTRACE_3
2020-04-13 14:49:08 -Generating unique operation named: listUsingGET_4
2020-04-13 14:49:09 -Generating unique operation named: editUsingGET_4
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_5
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPOST_4
2020-04-13 14:49:09 -Generating unique operation named: addUsingGET_4
2020-04-13 14:49:09 -Generating unique operation named: editUsingGET_5
2020-04-13 14:49:09 -Generating unique operation named: infoUsingGET_1
2020-04-13 14:49:09 -Generating unique operation named: infoUsingHEAD_1
2020-04-13 14:49:09 -Generating unique operation named: infoUsingPOST_1
2020-04-13 14:49:09 -Generating unique operation named: infoUsingPUT_1
2020-04-13 14:49:09 -Generating unique operation named: infoUsingPATCH_1
2020-04-13 14:49:09 -Generating unique operation named: infoUsingDELETE_1
2020-04-13 14:49:09 -Generating unique operation named: infoUsingOPTIONS_1
2020-04-13 14:49:09 -Generating unique operation named: infoUsingTRACE_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_6
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_8
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_9
2020-04-13 14:49:09 -Generating unique operation named: saveUsingPOST_4
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPOST_5
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_7
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_10
2020-04-13 14:49:09 -Generating unique operation named: indexUsingGET_1
2020-04-13 14:49:09 -Generating unique operation named: welcomeUsingGET_1
2020-04-13 14:49:09 -Generating unique operation named: addUsingGET_5
2020-04-13 14:49:09 -Generating unique operation named: editUsingGET_6
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_8
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_11
2020-04-13 14:49:09 -Generating unique operation named: saveUsingPOST_5
2020-04-13 14:49:09 -Generating unique operation named: treeUsingGET_1
2020-04-13 14:49:09 -Generating unique operation named: treeUsingGET_2
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPOST_6
2020-04-13 14:49:09 -Generating unique operation named: batchRemoveUsingPOST_1
2020-04-13 14:49:09 -Generating unique operation named: editUsingGET_7
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_9
2020-04-13 14:49:09 -Generating unique operation named: addUsingGET_6
2020-04-13 14:49:09 -Generating unique operation named: editUsingGET_8
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_10
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_12
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_13
2020-04-13 14:49:09 -Generating unique operation named: saveUsingPOST_6
2020-04-13 14:49:09 -Generating unique operation named: updateUsingGET_4
2020-04-13 14:49:09 -Generating unique operation named: updateUsingHEAD_4
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPOST_7
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPUT_4
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPATCH_4
2020-04-13 14:49:09 -Generating unique operation named: updateUsingDELETE_4
2020-04-13 14:49:09 -Generating unique operation named: updateUsingOPTIONS_4
2020-04-13 14:49:09 -Generating unique operation named: updateUsingTRACE_4
2020-04-13 14:49:09 -Generating unique operation named: handleUsingGET_1
2020-04-13 14:49:09 -Generating unique operation named: addUsingGET_7
2020-04-13 14:49:09 -Generating unique operation named: batchRemoveUsingPOST_2
2020-04-13 14:49:09 -Generating unique operation named: deployUsingPOST_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_11
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_14
2020-04-13 14:49:09 -Generating unique operation named: addUsingGET_8
2020-04-13 14:49:09 -Generating unique operation named: batchRemoveUsingPOST_3
2020-04-13 14:49:09 -Generating unique operation named: editUsingGET_9
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_12
2020-04-13 14:49:09 -Generating unique operation named: saveUsingPOST_7
2020-04-13 14:49:09 -Generating unique operation named: saveUsingPOST_8
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPOST_8
2020-04-13 14:49:09 -Generating unique operation named: addUsingGET_9
2020-04-13 14:49:09 -Generating unique operation named: editUsingGET_10
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_13
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_15
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_16
2020-04-13 14:49:09 -Generating unique operation named: updateUsingGET_5
2020-04-13 14:49:09 -Generating unique operation named: updateUsingHEAD_5
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPOST_9
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPUT_5
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPATCH_5
2020-04-13 14:49:09 -Generating unique operation named: updateUsingDELETE_5
2020-04-13 14:49:09 -Generating unique operation named: updateUsingOPTIONS_5
2020-04-13 14:49:09 -Generating unique operation named: updateUsingTRACE_5
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_14
2020-04-13 14:49:09 -Generating unique operation named: listUsingHEAD_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingPOST_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingPUT_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingPATCH_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingDELETE_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingOPTIONS_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingTRACE_1
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_15
2020-04-13 14:49:09 -Generating unique operation named: addUsingGET_10
2020-04-13 14:49:09 -Generating unique operation named: batchRemoveUsingPOST_4
2020-04-13 14:49:09 -Generating unique operation named: editUsingGET_11
2020-04-13 14:49:09 -Generating unique operation named: listUsingGET_16
2020-04-13 14:49:09 -Generating unique operation named: removeUsingPOST_17
2020-04-13 14:49:09 -Generating unique operation named: saveUsingPOST_9
2020-04-13 14:49:09 -Generating unique operation named: treeUsingGET_3
2020-04-13 14:49:09 -Generating unique operation named: treeViewUsingGET_1
2020-04-13 14:49:09 -Generating unique operation named: updateUsingPOST_10
2020-04-13 14:49:09 -Starting Quartz Scheduler now
2020-04-13 14:49:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-13 14:49:09 -Starting...
2020-04-13 14:49:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-04-13 14:49:09 -Started.
2020-04-13 14:49:09 -Started BootdoApplicationTests in 55.013 seconds (JVM running for 57.217)
2020-04-13 14:49:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2020-04-13 14:49:09 -==> Parameters: 
2020-04-13 14:49:09 -<==      Total: 2
2020-04-13 14:49:10 -Closing org.springframework.web.context.support.GenericWebApplicationContext@424ebba3: startup date [Mon Apr 13 14:48:15 CST 2020]; root of context hierarchy
2020-04-13 14:49:10 -Stopping beans in phase 2147483647
2020-04-13 14:49:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-04-13 14:49:10 -Stopping...
2020-04-13 14:49:10 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-04-13 14:49:10 -Stopped.
2020-04-13 14:49:10 -Shutting down ExecutorService 'brokerChannelExecutor'
2020-04-13 14:49:10 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2020-04-13 14:49:10 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2020-04-13 14:49:10 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2020-04-13 14:49:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2020-04-13 14:49:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2020-04-13 14:49:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2020-04-13 14:49:10 -Shutting down Quartz Scheduler
2020-04-13 14:49:21 -{dataSource-1} closed
