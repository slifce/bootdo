2020-04-08 16:06:18 -Starting BootdoApplication on PC201808081633 with PID 8064 (C:\MyWorks\IDEA2017WorkSpace01\bootdo\target\classes started by Administrator in C:\MyWorks\IDEA2017WorkSpace01\bootdo)
2020-04-08 16:06:18 -Running with Spring Boot v2.0.5.RELEASE, Spring v5.0.9.RELEASE
2020-04-08 16:06:18 -The following profiles are active: dev
2020-04-08 16:06:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b03b9fe: startup date [Wed Apr 08 16:06:18 CST 2020]; root of context hierarchy
2020-04-08 16:06:21 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-08 16:06:21 -Overriding bean definition for bean 'goodsRepository' with a different definition: replacing [Generic bean: class [org.mybatis.spring.mapper.MapperFactoryBean]; scope=singleton; abstract=false; lazyInit=false; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\MyWorks\IDEA2017WorkSpace01\bootdo\target\classes\com\bootdo\brave\dao\GoodsRepository.class]] with [Root bean: class [org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-08 16:06:21 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-08 16:06:21 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo.brave.dao.GoodsRepository.
2020-04-08 16:06:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$86d43db6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$792d6c5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:22 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/Administrator/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2020-04-08 16:06:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2020-04-08 16:06:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2020-04-08 16:06:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 16:06:23 -Tomcat initialized with port(s): 8888 (http)
2020-04-08 16:06:23 -Initializing ProtocolHandler ["http-nio-8888"]
2020-04-08 16:06:23 -Starting service [Tomcat]
2020-04-08 16:06:23 -Starting Servlet Engine: Apache Tomcat/8.5.34
2020-04-08 16:06:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Java\jdk1.8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Java\jdk1.8\bin;C:\Java\jdk1.8\jre\bin;C:\MyWorks\Maven\apache-maven-3.5.4\bin;C:\MyWorks\nodejs\;C:\MyWorks\TortoiseSVN\bin;C:\Windows/system32;C:\Windows;C:\MyWorks\Git\Git\cmd;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\BypassRuntm;.]
2020-04-08 16:06:23 -Initializing Spring embedded WebApplicationContext
2020-04-08 16:06:23 -Root WebApplicationContext: initialization completed in 4721 ms
2020-04-08 16:06:24 -{dataSource-1} inited
2020-04-08 16:06:25 -no modules loaded
2020-04-08 16:06:25 -loaded plugin [org.elasticsearch.index.reindex.ReindexPlugin]
2020-04-08 16:06:25 -loaded plugin [org.elasticsearch.join.ParentJoinPlugin]
2020-04-08 16:06:25 -loaded plugin [org.elasticsearch.percolator.PercolatorPlugin]
2020-04-08 16:06:25 -loaded plugin [org.elasticsearch.script.mustache.MustachePlugin]
2020-04-08 16:06:25 -loaded plugin [org.elasticsearch.transport.Netty4Plugin]
2020-04-08 16:06:26 -Adding transport node : 192.168.8.54:9300
2020-04-08 16:06:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-04-08 16:06:48 -Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-04-08 16:06:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-04-08 16:06:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-04-08 16:06:48 -Mapping filter: 'requestContextFilter' to: [/*]
2020-04-08 16:06:48 -Filter xssFilter was not registered (disabled)
2020-04-08 16:06:48 -Mapping filter: 'httpTraceFilter' to: [/*]
2020-04-08 16:06:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2020-04-08 16:06:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2020-04-08 16:06:48 -Servlet statViewServlet mapped to [/druid/*]
2020-04-08 16:06:48 -Servlet dispatcherServlet mapped to [/]
2020-04-08 16:06:49 -ProcessEngine default created
2020-04-08 16:06:50 -failed to load elasticsearch nodes : org.elasticsearch.client.transport.NoNodeAvailableException: None of the configured nodes are available: [{#transport#-1}{4L0xX8VgSWmE6MMv-5SUoA}{192.168.8.54}{192.168.8.54:9300}]
2020-04-08 16:06:50 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b03b9fe: startup date [Wed Apr 08 16:06:18 CST 2020]; root of context hierarchy
2020-04-08 16:06:51 -Using default implementation for ThreadExecutor
2020-04-08 16:06:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-04-08 16:06:51 -Quartz Scheduler v.2.2.1 created.
2020-04-08 16:06:51 -RAMJobStore initialized.
2020-04-08 16:06:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-04-08 16:06:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2020-04-08 16:06:51 -Quartz scheduler version: 2.2.1
2020-04-08 16:06:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@248d3a
2020-04-08 16:06:51 -Initializing ExecutorService  'clientInboundChannelExecutor'
2020-04-08 16:06:51 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2020-04-08 16:06:52 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2020-04-08 16:06:52 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2020-04-08 16:06:52 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2020-04-08 16:06:52 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-04-08 16:06:52 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2020-04-08 16:06:52 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2020-04-08 16:06:52 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2020-04-08 16:06:52 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2020-04-08 16:06:52 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2020-04-08 16:06:52 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2020-04-08 16:06:52 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2020-04-08 16:06:52 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2020-04-08 16:06:52 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2020-04-08 16:06:52 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-04-08 16:06:52 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2020-04-08 16:06:52 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2020-04-08 16:06:52 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2020-04-08 16:06:52 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2020-04-08 16:06:52 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2020-04-08 16:06:52 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-04-08 16:06:52 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2020-04-08 16:06:52 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2020-04-08 16:06:52 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-04-08 16:06:52 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2020-04-08 16:06:52 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2020-04-08 16:06:52 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2020-04-08 16:06:52 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2020-04-08 16:06:52 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2020-04-08 16:06:52 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2020-04-08 16:06:52 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2020-04-08 16:06:52 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2020-04-08 16:06:52 -Mapped "{[/save],methods=[GET]}" onto public java.lang.String com.bootdo.brave.controller.GoodsController.save()
2020-04-08 16:06:52 -Mapped "{[/hello1]}" onto public java.lang.String com.bootdo.brave.controller.Hello.index()
2020-04-08 16:06:52 -Mapped "{[/hello]}" onto public java.lang.String com.bootdo.brave.controller.HelloController.index()
2020-04-08 16:06:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2020-04-08 16:06:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2020-04-08 16:06:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2020-04-08 16:06:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2020-04-08 16:06:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2020-04-08 16:06:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2020-04-08 16:06:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2020-04-08 16:06:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-04-08 16:06:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2020-04-08 16:06:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2020-04-08 16:06:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2020-04-08 16:06:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2020-04-08 16:06:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2020-04-08 16:06:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2020-04-08 16:06:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2020-04-08 16:06:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-08 16:06:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-08 16:06:52 -Mapped "{[/frequent/list],methods=[GET]}" onto public java.lang.String com.bootdo.frequent.controller.FrequentContactController.list()
2020-04-08 16:06:52 -Mapped "{[/frequent/query],methods=[GET]}" onto public com.bootdo.frequent.domain.FrequentContact com.bootdo.frequent.controller.FrequentContactController.selectById()
2020-04-08 16:06:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2020-04-08 16:06:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2020-04-08 16:06:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2020-04-08 16:06:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2020-04-08 16:06:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2020-04-08 16:06:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2020-04-08 16:06:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2020-04-08 16:06:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2020-04-08 16:06:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2020-04-08 16:06:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2020-04-08 16:06:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2020-04-08 16:06:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2020-04-08 16:06:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2020-04-08 16:06:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2020-04-08 16:06:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2020-04-08 16:06:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2020-04-08 16:06:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2020-04-08 16:06:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2020-04-08 16:06:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2020-04-08 16:06:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2020-04-08 16:06:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list(javax.servlet.http.HttpServletRequest)
2020-04-08 16:06:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-04-08 16:06:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2020-04-08 16:06:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2020-04-08 16:06:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2020-04-08 16:06:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2020-04-08 16:06:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2020-04-08 16:06:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2020-04-08 16:06:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2020-04-08 16:06:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2020-04-08 16:06:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2020-04-08 16:06:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2020-04-08 16:06:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2020-04-08 16:06:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2020-04-08 16:06:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2020-04-08 16:06:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-04-08 16:06:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-04-08 16:06:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-04-08 16:06:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-04-08 16:06:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-04-08 16:06:52 -Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-08 16:06:52 -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-04-08 16:06:52 -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-04-08 16:06:52 -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-04-08 16:06:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2020-04-08 16:06:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2020-04-08 16:06:52 -Initializing ExecutorService  'brokerChannelExecutor'
2020-04-08 16:06:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-08 16:06:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b03b9fe: startup date [Wed Apr 08 16:06:18 CST 2020]; root of context hierarchy
2020-04-08 16:06:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-08 16:06:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-08 16:06:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-08 16:06:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2020-04-08 16:06:52 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2020-04-08 16:06:53 -Registering beans for JMX exposure on startup
2020-04-08 16:06:53 -Bean with name 'dataSource' has been autodetected for JMX exposure
2020-04-08 16:06:53 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2020-04-08 16:06:53 -Starting beans in phase 2147483647
2020-04-08 16:06:53 -Context refreshed
2020-04-08 16:06:53 -Found 1 custom documentation plugin(s)
2020-04-08 16:06:53 -Scanning for api listing references
2020-04-08 16:06:53 -Generating unique operation named: removeUsingPOST_1
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_2
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_3
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingHEAD_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPUT_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPATCH_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingDELETE_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingOPTIONS_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingTRACE_1
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_2
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_2
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_2
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_4
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_5
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingGET_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingHEAD_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPUT_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPATCH_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingDELETE_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingOPTIONS_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingTRACE_2
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_3
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_3
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_3
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_6
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_7
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_3
2020-04-08 16:06:54 -Generating unique operation named: updateUsingGET_3
2020-04-08 16:06:54 -Generating unique operation named: updateUsingHEAD_3
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_3
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPUT_3
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPATCH_3
2020-04-08 16:06:54 -Generating unique operation named: updateUsingDELETE_3
2020-04-08 16:06:54 -Generating unique operation named: updateUsingOPTIONS_3
2020-04-08 16:06:54 -Generating unique operation named: updateUsingTRACE_3
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_4
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_4
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_5
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_4
2020-04-08 16:06:54 -Generating unique operation named: indexUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: indexUsingHEAD_1
2020-04-08 16:06:54 -Generating unique operation named: indexUsingPOST_1
2020-04-08 16:06:54 -Generating unique operation named: indexUsingPUT_1
2020-04-08 16:06:54 -Generating unique operation named: indexUsingPATCH_1
2020-04-08 16:06:54 -Generating unique operation named: indexUsingDELETE_1
2020-04-08 16:06:54 -Generating unique operation named: indexUsingOPTIONS_1
2020-04-08 16:06:54 -Generating unique operation named: indexUsingTRACE_1
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_4
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_5
2020-04-08 16:06:54 -Generating unique operation named: infoUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: infoUsingHEAD_1
2020-04-08 16:06:54 -Generating unique operation named: infoUsingPOST_1
2020-04-08 16:06:54 -Generating unique operation named: infoUsingPUT_1
2020-04-08 16:06:54 -Generating unique operation named: infoUsingPATCH_1
2020-04-08 16:06:54 -Generating unique operation named: infoUsingDELETE_1
2020-04-08 16:06:54 -Generating unique operation named: infoUsingOPTIONS_1
2020-04-08 16:06:54 -Generating unique operation named: infoUsingTRACE_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_6
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_8
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_9
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_4
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_5
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_7
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_10
2020-04-08 16:06:54 -Generating unique operation named: indexUsingGET_2
2020-04-08 16:06:54 -Generating unique operation named: welcomeUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_5
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_6
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_8
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_11
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_5
2020-04-08 16:06:54 -Generating unique operation named: treeUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: treeUsingGET_2
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_6
2020-04-08 16:06:54 -Generating unique operation named: batchRemoveUsingPOST_1
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_7
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_9
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_6
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_8
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_10
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_12
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_13
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_6
2020-04-08 16:06:54 -Generating unique operation named: updateUsingGET_4
2020-04-08 16:06:54 -Generating unique operation named: updateUsingHEAD_4
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_7
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPUT_4
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPATCH_4
2020-04-08 16:06:54 -Generating unique operation named: updateUsingDELETE_4
2020-04-08 16:06:54 -Generating unique operation named: updateUsingOPTIONS_4
2020-04-08 16:06:54 -Generating unique operation named: updateUsingTRACE_4
2020-04-08 16:06:54 -Generating unique operation named: handleUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_7
2020-04-08 16:06:54 -Generating unique operation named: batchRemoveUsingPOST_2
2020-04-08 16:06:54 -Generating unique operation named: deployUsingPOST_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_11
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_14
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_8
2020-04-08 16:06:54 -Generating unique operation named: batchRemoveUsingPOST_3
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_9
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_12
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_7
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_8
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_8
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_9
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_10
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_13
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_15
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_16
2020-04-08 16:06:54 -Generating unique operation named: updateUsingGET_5
2020-04-08 16:06:54 -Generating unique operation named: updateUsingHEAD_5
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_9
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPUT_5
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPATCH_5
2020-04-08 16:06:54 -Generating unique operation named: updateUsingDELETE_5
2020-04-08 16:06:54 -Generating unique operation named: updateUsingOPTIONS_5
2020-04-08 16:06:54 -Generating unique operation named: updateUsingTRACE_5
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_14
2020-04-08 16:06:54 -Generating unique operation named: listUsingHEAD_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingPOST_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingPUT_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingPATCH_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingDELETE_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingOPTIONS_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingTRACE_1
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_15
2020-04-08 16:06:54 -Generating unique operation named: addUsingGET_10
2020-04-08 16:06:54 -Generating unique operation named: batchRemoveUsingPOST_4
2020-04-08 16:06:54 -Generating unique operation named: editUsingGET_11
2020-04-08 16:06:54 -Generating unique operation named: listUsingGET_16
2020-04-08 16:06:54 -Generating unique operation named: removeUsingPOST_17
2020-04-08 16:06:54 -Generating unique operation named: saveUsingPOST_9
2020-04-08 16:06:54 -Generating unique operation named: treeUsingGET_3
2020-04-08 16:06:54 -Generating unique operation named: treeViewUsingGET_1
2020-04-08 16:06:54 -Generating unique operation named: updateUsingPOST_10
2020-04-08 16:06:54 -Starting Quartz Scheduler now
2020-04-08 16:06:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2020-04-08 16:06:54 -Starting...
2020-04-08 16:06:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-04-08 16:06:54 -Started.
2020-04-08 16:06:54 -Starting ProtocolHandler ["http-nio-8888"]
2020-04-08 16:06:54 -Using a shared selector for servlet write/read
2020-04-08 16:06:55 -Tomcat started on port(s): 8888 (http) with context path ''
2020-04-08 16:06:55 -Started BootdoApplication in 37.143 seconds (JVM running for 38.181)
2020-04-08 16:06:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2020-04-08 16:06:55 -==> Parameters: 
2020-04-08 16:06:55 -<==      Total: 2
2020-04-08 16:07:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2020-04-08 16:07:55 -A cookie header was received [1581676267; adultFemale=%221976-06-20%2C43%2C1%2C1585106766387%22; juvenileFemale=%222011-04-04%2C9%2C1%2C1586231039950%22; browseInfo=%5B%7B%22url%22%3A%22http%3A//localhost/web-zhongmin/annuity/detail/is1_ip12569.html%22%2C%22productImg%22%3A%22//images.zhongmin.cn/images/2018/320/12569.jpg%22%2C%22productName%22%3A%22%u6052%u5B89%u6807%u51C6%u6052%u76C8%u5E74%u5E74%u5E74%u91D1%u4FDD%u9669%22%2C%22price%22%3A%2210000%22%2C%22pid%22%3A12569%7D%5D; juvenileMale=%222011-04-04%2C9%2C0%2C1586314720466%22; isUserNameSaved=1; phoneSaved=%2218823786682%22] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2020-04-08 16:07:55 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-04-08 16:07:55 -FrameworkServlet 'dispatcherServlet': initialization started
2020-04-08 16:07:55 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2020-04-08 16:07:55 -Enabling session validation scheduler...
2020-04-08 16:07:55 -请求地址 : http://localhost:8888/
2020-04-08 16:07:55 -HTTP METHOD : GET
2020-04-08 16:07:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2020-04-08 16:07:55 -参数 : [{}]
2020-04-08 16:07:55 -耗时 : 1
2020-04-08 16:07:55 -返回值 : redirect:/blog
2020-04-08 16:07:55 -请求地址 : http://localhost:8888/blog
2020-04-08 16:07:55 -HTTP METHOD : GET
2020-04-08 16:07:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2020-04-08 16:07:55 -参数 : []
2020-04-08 16:07:55 -耗时 : 0
2020-04-08 16:07:55 -返回值 : blog/index/main
2020-04-08 16:08:00 -请求地址 : http://localhost:8888/blog/open/list
2020-04-08 16:08:00 -HTTP METHOD : GET
2020-04-08 16:08:00 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2020-04-08 16:08:00 -参数 : [{type=article, limit=10, offset=0}]
2020-04-08 16:08:00 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2020-04-08 16:08:00 -==> Parameters: article(String)
2020-04-08 16:08:00 -请求地址 : http://localhost:8888/login;JSESSIONID=4485ee4f-ac24-4ce3-9d23-d4e8b64e4a60
2020-04-08 16:08:00 -HTTP METHOD : GET
2020-04-08 16:08:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-08 16:08:00 -参数 : []
2020-04-08 16:08:00 -耗时 : 0
2020-04-08 16:08:00 -返回值 : login
2020-04-08 16:08:00 -<==      Total: 10
2020-04-08 16:08:00 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2020-04-08 16:08:00 -==> Parameters: article(String)
2020-04-08 16:08:00 -<==      Total: 1
2020-04-08 16:08:00 -耗时 : 269
2020-04-08 16:08:00 -返回值 : com.bootdo.common.utils.PageUtils@4b7400a9
2020-04-08 16:08:58 -请求地址 : http://localhost:8888/login
2020-04-08 16:08:58 -HTTP METHOD : GET
2020-04-08 16:08:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-08 16:08:58 -参数 : []
2020-04-08 16:08:58 -耗时 : 0
2020-04-08 16:08:58 -返回值 : login
2020-04-08 16:08:58 -请求地址 : http://localhost:8888/login
2020-04-08 16:08:58 -HTTP METHOD : GET
2020-04-08 16:08:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2020-04-08 16:08:58 -参数 : []
2020-04-08 16:08:58 -耗时 : 0
2020-04-08 16:08:58 -返回值 : login
2020-04-08 16:09:00 -请求地址 : http://localhost:8888/login
2020-04-08 16:09:00 -HTTP METHOD : POST
2020-04-08 16:09:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2020-04-08 16:09:00 -参数 : [admin, 111111]
2020-04-08 16:09:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2020-04-08 16:09:00 -==> Parameters: admin(String)
2020-04-08 16:09:00 -<==      Total: 1
2020-04-08 16:09:01 -耗时 : 103
2020-04-08 16:09:01 -返回值 : {msg=操作成功, code=0}
2020-04-08 16:09:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2020-04-08 16:09:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-04-08 16:09:01 -==> Parameters: 1(Long), admin(String), 登录(String), 103(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2020-04-08 16:09:01.101(Timestamp)
2020-04-08 16:09:01 -请求地址 : http://localhost:8888/index
2020-04-08 16:09:01 -HTTP METHOD : GET
2020-04-08 16:09:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2020-04-08 16:09:01 -参数 : [{}]
2020-04-08 16:09:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2020-04-08 16:09:01 -==> Parameters: 1(Long)
2020-04-08 16:09:01 -<==    Updates: 1
2020-04-08 16:09:01 -<==      Total: 28
2020-04-08 16:09:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2020-04-08 16:09:01 -==> Parameters: 145(Long)
2020-04-08 16:09:01 -<==      Total: 1
2020-04-08 16:09:01 -耗时 : 278
2020-04-08 16:09:01 -返回值 : index_v1
2020-04-08 16:09:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-04-08 16:09:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 278(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2020-04-08 16:09:01.453(Timestamp)
2020-04-08 16:09:01 -<==    Updates: 1
2020-04-08 16:09:01 -请求地址 : http://localhost:8888/main
2020-04-08 16:09:01 -HTTP METHOD : GET
2020-04-08 16:09:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-04-08 16:09:01 -参数 : []
2020-04-08 16:09:01 -耗时 : 0
2020-04-08 16:09:01 -返回值 : main
2020-04-08 16:09:01 -请求地址 : http://localhost:8888/oa/notify/message
2020-04-08 16:09:01 -HTTP METHOD : GET
2020-04-08 16:09:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2020-04-08 16:09:01 -参数 : []
2020-04-08 16:09:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2020-04-08 16:09:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2020-04-08 16:09:01 -请求地址 : http://localhost:8888/main
2020-04-08 16:09:01 -HTTP METHOD : GET
2020-04-08 16:09:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-04-08 16:09:01 -参数 : []
2020-04-08 16:09:01 -耗时 : 0
2020-04-08 16:09:01 -返回值 : main
2020-04-08 16:09:01 -<==      Total: 1
2020-04-08 16:09:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:09:01 -==> Parameters: 1(Long)
2020-04-08 16:09:01 -<==      Total: 1
2020-04-08 16:09:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2020-04-08 16:09:01 -==> Parameters: 1(Long), 0(String)
2020-04-08 16:09:01 -<==      Total: 1
2020-04-08 16:09:01 -耗时 : 44
2020-04-08 16:09:01 -返回值 : com.bootdo.common.utils.PageUtils@2036a6bc
2020-04-08 16:09:04 -请求地址 : http://localhost:8888/hello1
2020-04-08 16:09:04 -HTTP METHOD : GET
2020-04-08 16:09:04 -CLASS_METHOD : com.bootdo.brave.controller.Hello.index
2020-04-08 16:09:04 -参数 : []
2020-04-08 16:09:04 -耗时 : 3
2020-04-08 16:09:04 -返回值 : hello world
2020-04-08 16:09:53 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:136)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:245)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 16:09:53 -Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-04-08 16:10:35 -请求地址 : http://localhost:8888/main
2020-04-08 16:10:35 -HTTP METHOD : GET
2020-04-08 16:10:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2020-04-08 16:10:35 -参数 : []
2020-04-08 16:10:35 -耗时 : 0
2020-04-08 16:10:35 -返回值 : main
2020-04-08 16:10:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2020-04-08 16:10:38 -==> Parameters: 1(Long)
2020-04-08 16:10:38 -<==      Total: 47
2020-04-08 16:10:38 -请求地址 : http://localhost:8888/sys/user/
2020-04-08 16:10:38 -HTTP METHOD : GET
2020-04-08 16:10:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2020-04-08 16:10:38 -参数 : [{}]
2020-04-08 16:10:38 -耗时 : 0
2020-04-08 16:10:38 -返回值 : system/user/user
2020-04-08 16:10:39 -请求地址 : http://localhost:8888/sys/user/list
2020-04-08 16:10:39 -HTTP METHOD : GET
2020-04-08 16:10:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2020-04-08 16:10:39 -参数 : [{limit=10, offset=0, name=, deptId=}]
2020-04-08 16:10:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2020-04-08 16:10:39 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 16:10:39 -请求地址 : http://localhost:8888/system/sysDept/tree
2020-04-08 16:10:39 -HTTP METHOD : GET
2020-04-08 16:10:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2020-04-08 16:10:39 -参数 : []
2020-04-08 16:10:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2020-04-08 16:10:39 -==> Parameters: 
2020-04-08 16:10:39 -<==      Total: 10
2020-04-08 16:10:39 -==>  Preparing: select count(*) from sys_user 
2020-04-08 16:10:39 -==> Parameters: 
2020-04-08 16:10:39 -<==      Total: 1
2020-04-08 16:10:39 -耗时 : 55
2020-04-08 16:10:39 -返回值 : com.bootdo.common.utils.PageUtils@2f7a38c5
2020-04-08 16:10:39 -<==      Total: 12
2020-04-08 16:10:39 -耗时 : 65
2020-04-08 16:10:39 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"19","parentId":"18","state":{"opened":true},"text":"java开发"}],"hasChildren":true,"hasParent":false,"id":"18","parentId":"0","state":{"opened":true},"text":"开发部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2020-04-08 16:12:15 -请求地址 : http://localhost:8888/hello1
2020-04-08 16:12:15 -HTTP METHOD : GET
2020-04-08 16:12:15 -CLASS_METHOD : com.bootdo.brave.controller.Hello.index
2020-04-08 16:12:15 -参数 : []
2020-04-08 16:12:15 -耗时 : 0
2020-04-08 16:12:15 -返回值 : hello world
2020-04-08 16:17:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2020-04-08 16:17:47 -==> Parameters: 1(Long)
2020-04-08 16:17:47 -<==      Total: 47
2020-04-08 16:17:47 -请求地址 : http://localhost:8888/sys/user/
2020-04-08 16:17:47 -HTTP METHOD : GET
2020-04-08 16:17:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2020-04-08 16:17:47 -参数 : [{}]
2020-04-08 16:17:47 -耗时 : 0
2020-04-08 16:17:47 -返回值 : system/user/user
2020-04-08 16:17:47 -请求地址 : http://localhost:8888/system/sysDept/tree
2020-04-08 16:17:47 -HTTP METHOD : GET
2020-04-08 16:17:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2020-04-08 16:17:47 -参数 : []
2020-04-08 16:17:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2020-04-08 16:17:47 -==> Parameters: 
2020-04-08 16:17:47 -<==      Total: 12
2020-04-08 16:17:47 -耗时 : 21
2020-04-08 16:17:47 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"19","parentId":"18","state":{"opened":true},"text":"java开发"}],"hasChildren":true,"hasParent":false,"id":"18","parentId":"0","state":{"opened":true},"text":"开发部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2020-04-08 16:17:47 -请求地址 : http://localhost:8888/sys/user/list
2020-04-08 16:17:47 -HTTP METHOD : GET
2020-04-08 16:17:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2020-04-08 16:17:47 -参数 : [{limit=10, offset=0, name=, deptId=}]
2020-04-08 16:17:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2020-04-08 16:17:47 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 16:17:48 -<==      Total: 10
2020-04-08 16:17:48 -==>  Preparing: select count(*) from sys_user 
2020-04-08 16:17:48 -==> Parameters: 
2020-04-08 16:17:48 -<==      Total: 1
2020-04-08 16:17:48 -耗时 : 93
2020-04-08 16:17:48 -返回值 : com.bootdo.common.utils.PageUtils@6b1dd1c9
2020-04-08 16:18:40 -请求地址 : http://localhost:8888/sys/user/edit/130
2020-04-08 16:18:40 -HTTP METHOD : GET
2020-04-08 16:18:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2020-04-08 16:18:40 -参数 : [{}, 130]
2020-04-08 16:18:40 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2020-04-08 16:18:40 -==> Parameters: 130(Long)
2020-04-08 16:18:40 -<==      Total: 1
2020-04-08 16:18:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:40 -==> Parameters: 130(Long)
2020-04-08 16:18:40 -<==      Total: 1
2020-04-08 16:18:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2020-04-08 16:18:40 -==> Parameters: 9(Long)
2020-04-08 16:18:40 -<==      Total: 1
2020-04-08 16:18:40 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2020-04-08 16:18:40 -==> Parameters: 130(Long)
2020-04-08 16:18:40 -<==      Total: 1
2020-04-08 16:18:41 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2020-04-08 16:18:41 -==> Parameters: 
2020-04-08 16:18:41 -<==      Total: 2
2020-04-08 16:18:41 -耗时 : 814
2020-04-08 16:18:41 -返回值 : system/user/edit
2020-04-08 16:18:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-04-08 16:18:41 -==> Parameters: 1(Long), admin(String), 编辑用户(String), 814(Integer), com.bootdo.system.controller.UserController.edit()(String), null, 127.0.0.1(String), 2020-04-08 16:18:41.618(Timestamp)
2020-04-08 16:18:41 -<==    Updates: 1
2020-04-08 16:18:55 -请求地址 : http://localhost:8888/oa/notify/selfNotify
2020-04-08 16:18:55 -HTTP METHOD : GET
2020-04-08 16:18:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2020-04-08 16:18:55 -参数 : []
2020-04-08 16:18:55 -耗时 : 1
2020-04-08 16:18:55 -返回值 : oa/notify/selfNotify
2020-04-08 16:18:55 -请求地址 : http://localhost:8888/oa/notify/selfList
2020-04-08 16:18:55 -HTTP METHOD : GET
2020-04-08 16:18:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2020-04-08 16:18:55 -参数 : [{limit=10, offset=0}]
2020-04-08 16:18:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2020-04-08 16:18:55 -<==      Total: 8
2020-04-08 16:18:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long)
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long)
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long)
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long)
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long)
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long)
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long)
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long)
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2020-04-08 16:18:55 -==> Parameters: 1(Long), null
2020-04-08 16:18:55 -<==      Total: 1
2020-04-08 16:18:55 -耗时 : 78
2020-04-08 16:18:55 -返回值 : com.bootdo.common.utils.PageUtils@2f83766b
